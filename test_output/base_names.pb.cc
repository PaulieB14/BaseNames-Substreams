// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: base_names.proto
// Protobuf C++ Version: 5.29.3

#include "base_names.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace base_names {
namespace v1 {

inline constexpr Transfer::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : from_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        to_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        token_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        block_number_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        block_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        transaction_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        log_index_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Transfer::Transfer(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TransferDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransferDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransferDefaultTypeInternal() {}
  union {
    Transfer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransferDefaultTypeInternal _Transfer_default_instance_;

inline constexpr ReverseRegistration::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        domain_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        block_number_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        block_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        transaction_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        log_index_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReverseRegistration::ReverseRegistration(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReverseRegistrationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReverseRegistrationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReverseRegistrationDefaultTypeInternal() {}
  union {
    ReverseRegistration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReverseRegistrationDefaultTypeInternal _ReverseRegistration_default_instance_;

inline constexpr ReverseClaimed::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : addr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        node_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        block_number_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        block_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        transaction_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        log_index_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReverseClaimed::ReverseClaimed(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReverseClaimedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReverseClaimedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReverseClaimedDefaultTypeInternal() {}
  union {
    ReverseClaimed _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReverseClaimedDefaultTypeInternal _ReverseClaimed_default_instance_;

inline constexpr Registration::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        domain_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        registration_date_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        expiry_date_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cost_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        label_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        label_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        registrant_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        label_owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Registration::Registration(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegistrationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegistrationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegistrationDefaultTypeInternal() {}
  union {
    Registration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegistrationDefaultTypeInternal _Registration_default_instance_;

inline constexpr NewTTL::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : node_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        block_number_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        block_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        transaction_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ttl_{::uint64_t{0u}},
        log_index_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NewTTL::NewTTL(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NewTTLDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewTTLDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewTTLDefaultTypeInternal() {}
  union {
    NewTTL _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewTTLDefaultTypeInternal _NewTTL_default_instance_;

inline constexpr NewResolver::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : node_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        resolver_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        block_number_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        block_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        transaction_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        log_index_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NewResolver::NewResolver(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NewResolverDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewResolverDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewResolverDefaultTypeInternal() {}
  union {
    NewResolver _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewResolverDefaultTypeInternal _NewResolver_default_instance_;

inline constexpr NewOwner::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : node_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        label_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        block_number_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        block_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        transaction_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        log_index_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NewOwner::NewOwner(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NewOwnerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewOwnerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewOwnerDefaultTypeInternal() {}
  union {
    NewOwner _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewOwnerDefaultTypeInternal _NewOwner_default_instance_;

inline constexpr NameRenewed::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        label_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        block_number_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        block_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        transaction_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cost_{::uint64_t{0u}},
        expires_{::uint64_t{0u}},
        log_index_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NameRenewed::NameRenewed(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NameRenewedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NameRenewedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NameRenewedDefaultTypeInternal() {}
  union {
    NameRenewed _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NameRenewedDefaultTypeInternal _NameRenewed_default_instance_;

inline constexpr NameRegistered::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        label_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        block_number_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        block_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        transaction_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cost_{::uint64_t{0u}},
        expires_{::uint64_t{0u}},
        log_index_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NameRegistered::NameRegistered(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NameRegisteredDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NameRegisteredDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NameRegisteredDefaultTypeInternal() {}
  union {
    NameRegistered _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NameRegisteredDefaultTypeInternal _NameRegistered_default_instance_;

inline constexpr Domain::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        label_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        label_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        parent_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subdomain_count_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        resolved_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        resolver_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subdomain_count_updated_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ttl_{::uint64_t{0u}},
        created_at_{::uint64_t{0u}},
        is_migrated_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Domain::Domain(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DomainDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DomainDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DomainDefaultTypeInternal() {}
  union {
    Domain _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DomainDefaultTypeInternal _Domain_default_instance_;

inline constexpr ReverseEvents::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : reverse_claimed_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReverseEvents::ReverseEvents(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReverseEventsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReverseEventsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReverseEventsDefaultTypeInternal() {}
  union {
    ReverseEvents _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReverseEventsDefaultTypeInternal _ReverseEvents_default_instance_;

inline constexpr RegistryEvents::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : new_owners_{},
        new_resolvers_{},
        new_ttls_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RegistryEvents::RegistryEvents(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegistryEventsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegistryEventsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegistryEventsDefaultTypeInternal() {}
  union {
    RegistryEvents _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegistryEventsDefaultTypeInternal _RegistryEvents_default_instance_;

inline constexpr RegistrarEvents::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_registered_{},
        name_renewed_{},
        transfer_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RegistrarEvents::RegistrarEvents(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegistrarEventsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegistrarEventsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegistrarEventsDefaultTypeInternal() {}
  union {
    RegistrarEvents _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegistrarEventsDefaultTypeInternal _RegistrarEvents_default_instance_;

inline constexpr ControllerEvents::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : controller_name_registered_{},
        controller_name_renewed_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ControllerEvents::ControllerEvents(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ControllerEventsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControllerEventsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControllerEventsDefaultTypeInternal() {}
  union {
    ControllerEvents _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControllerEventsDefaultTypeInternal _ControllerEvents_default_instance_;
}  // namespace v1
}  // namespace base_names
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_base_5fnames_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_base_5fnames_2eproto = nullptr;
const ::uint32_t
    TableStruct_base_5fnames_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::base_names::v1::RegistryEvents, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::base_names::v1::RegistryEvents, _impl_.new_owners_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::RegistryEvents, _impl_.new_resolvers_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::RegistryEvents, _impl_.new_ttls_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NewOwner, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NewOwner, _impl_.node_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NewOwner, _impl_.label_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NewOwner, _impl_.owner_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NewOwner, _impl_.block_number_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NewOwner, _impl_.block_hash_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NewOwner, _impl_.transaction_hash_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NewOwner, _impl_.log_index_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NewResolver, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NewResolver, _impl_.node_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NewResolver, _impl_.resolver_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NewResolver, _impl_.block_number_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NewResolver, _impl_.block_hash_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NewResolver, _impl_.transaction_hash_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NewResolver, _impl_.log_index_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NewTTL, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NewTTL, _impl_.node_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NewTTL, _impl_.ttl_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NewTTL, _impl_.block_number_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NewTTL, _impl_.block_hash_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NewTTL, _impl_.transaction_hash_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NewTTL, _impl_.log_index_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::base_names::v1::RegistrarEvents, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::base_names::v1::RegistrarEvents, _impl_.name_registered_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::RegistrarEvents, _impl_.name_renewed_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::RegistrarEvents, _impl_.transfer_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NameRegistered, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NameRegistered, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NameRegistered, _impl_.label_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NameRegistered, _impl_.owner_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NameRegistered, _impl_.cost_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NameRegistered, _impl_.expires_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NameRegistered, _impl_.block_number_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NameRegistered, _impl_.block_hash_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NameRegistered, _impl_.transaction_hash_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NameRegistered, _impl_.log_index_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NameRenewed, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NameRenewed, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NameRenewed, _impl_.label_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NameRenewed, _impl_.cost_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NameRenewed, _impl_.expires_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NameRenewed, _impl_.block_number_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NameRenewed, _impl_.block_hash_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NameRenewed, _impl_.transaction_hash_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::NameRenewed, _impl_.log_index_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Transfer, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Transfer, _impl_.from_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Transfer, _impl_.to_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Transfer, _impl_.token_id_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Transfer, _impl_.block_number_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Transfer, _impl_.block_hash_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Transfer, _impl_.transaction_hash_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Transfer, _impl_.log_index_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::base_names::v1::ControllerEvents, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::base_names::v1::ControllerEvents, _impl_.controller_name_registered_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::ControllerEvents, _impl_.controller_name_renewed_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::base_names::v1::ReverseEvents, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::base_names::v1::ReverseEvents, _impl_.reverse_claimed_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::base_names::v1::ReverseClaimed, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::base_names::v1::ReverseClaimed, _impl_.addr_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::ReverseClaimed, _impl_.node_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::ReverseClaimed, _impl_.owner_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::ReverseClaimed, _impl_.block_number_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::ReverseClaimed, _impl_.block_hash_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::ReverseClaimed, _impl_.transaction_hash_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::ReverseClaimed, _impl_.log_index_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Domain, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Domain, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Domain, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Domain, _impl_.label_name_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Domain, _impl_.label_hash_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Domain, _impl_.parent_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Domain, _impl_.subdomain_count_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Domain, _impl_.resolved_address_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Domain, _impl_.owner_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Domain, _impl_.resolver_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Domain, _impl_.ttl_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Domain, _impl_.is_migrated_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Domain, _impl_.created_at_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Domain, _impl_.subdomain_count_updated_at_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Registration, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Registration, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Registration, _impl_.domain_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Registration, _impl_.registration_date_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Registration, _impl_.expiry_date_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Registration, _impl_.cost_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Registration, _impl_.label_name_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Registration, _impl_.label_hash_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Registration, _impl_.registrant_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::Registration, _impl_.label_owner_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::base_names::v1::ReverseRegistration, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::base_names::v1::ReverseRegistration, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::ReverseRegistration, _impl_.domain_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::ReverseRegistration, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::ReverseRegistration, _impl_.block_number_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::ReverseRegistration, _impl_.block_hash_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::ReverseRegistration, _impl_.transaction_hash_),
        PROTOBUF_FIELD_OFFSET(::base_names::v1::ReverseRegistration, _impl_.log_index_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::base_names::v1::RegistryEvents)},
        {11, -1, -1, sizeof(::base_names::v1::NewOwner)},
        {26, -1, -1, sizeof(::base_names::v1::NewResolver)},
        {40, -1, -1, sizeof(::base_names::v1::NewTTL)},
        {54, -1, -1, sizeof(::base_names::v1::RegistrarEvents)},
        {65, -1, -1, sizeof(::base_names::v1::NameRegistered)},
        {82, -1, -1, sizeof(::base_names::v1::NameRenewed)},
        {98, -1, -1, sizeof(::base_names::v1::Transfer)},
        {113, -1, -1, sizeof(::base_names::v1::ControllerEvents)},
        {123, -1, -1, sizeof(::base_names::v1::ReverseEvents)},
        {132, -1, -1, sizeof(::base_names::v1::ReverseClaimed)},
        {147, -1, -1, sizeof(::base_names::v1::Domain)},
        {168, -1, -1, sizeof(::base_names::v1::Registration)},
        {185, -1, -1, sizeof(::base_names::v1::ReverseRegistration)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::base_names::v1::_RegistryEvents_default_instance_._instance,
    &::base_names::v1::_NewOwner_default_instance_._instance,
    &::base_names::v1::_NewResolver_default_instance_._instance,
    &::base_names::v1::_NewTTL_default_instance_._instance,
    &::base_names::v1::_RegistrarEvents_default_instance_._instance,
    &::base_names::v1::_NameRegistered_default_instance_._instance,
    &::base_names::v1::_NameRenewed_default_instance_._instance,
    &::base_names::v1::_Transfer_default_instance_._instance,
    &::base_names::v1::_ControllerEvents_default_instance_._instance,
    &::base_names::v1::_ReverseEvents_default_instance_._instance,
    &::base_names::v1::_ReverseClaimed_default_instance_._instance,
    &::base_names::v1::_Domain_default_instance_._instance,
    &::base_names::v1::_Registration_default_instance_._instance,
    &::base_names::v1::_ReverseRegistration_default_instance_._instance,
};
const char descriptor_table_protodef_base_5fnames_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\020base_names.proto\022\rbase_names.v1\032\037googl"
    "e/protobuf/timestamp.proto\"\231\001\n\016RegistryE"
    "vents\022+\n\nnew_owners\030\001 \003(\0132\027.base_names.v"
    "1.NewOwner\0221\n\rnew_resolvers\030\002 \003(\0132\032.base"
    "_names.v1.NewResolver\022\'\n\010new_ttls\030\003 \003(\0132"
    "\025.base_names.v1.NewTTL\"\215\001\n\010NewOwner\022\014\n\004n"
    "ode\030\001 \001(\t\022\r\n\005label\030\002 \001(\t\022\r\n\005owner\030\003 \001(\t\022"
    "\024\n\014block_number\030\004 \001(\t\022\022\n\nblock_hash\030\005 \001("
    "\t\022\030\n\020transaction_hash\030\006 \001(\t\022\021\n\tlog_index"
    "\030\007 \001(\r\"\204\001\n\013NewResolver\022\014\n\004node\030\001 \001(\t\022\020\n\010"
    "resolver\030\002 \001(\t\022\024\n\014block_number\030\003 \001(\t\022\022\n\n"
    "block_hash\030\004 \001(\t\022\030\n\020transaction_hash\030\005 \001"
    "(\t\022\021\n\tlog_index\030\006 \001(\r\"z\n\006NewTTL\022\014\n\004node\030"
    "\001 \001(\t\022\013\n\003ttl\030\002 \001(\004\022\024\n\014block_number\030\003 \001(\t"
    "\022\022\n\nblock_hash\030\004 \001(\t\022\030\n\020transaction_hash"
    "\030\005 \001(\t\022\021\n\tlog_index\030\006 \001(\r\"\246\001\n\017RegistrarE"
    "vents\0226\n\017name_registered\030\001 \003(\0132\035.base_na"
    "mes.v1.NameRegistered\0220\n\014name_renewed\030\002 "
    "\003(\0132\032.base_names.v1.NameRenewed\022)\n\010trans"
    "fer\030\003 \003(\0132\027.base_names.v1.Transfer\"\262\001\n\016N"
    "ameRegistered\022\014\n\004name\030\001 \001(\t\022\r\n\005label\030\002 \001"
    "(\t\022\r\n\005owner\030\003 \001(\t\022\014\n\004cost\030\004 \001(\004\022\017\n\007expir"
    "es\030\005 \001(\004\022\024\n\014block_number\030\006 \001(\t\022\022\n\nblock_"
    "hash\030\007 \001(\t\022\030\n\020transaction_hash\030\010 \001(\t\022\021\n\t"
    "log_index\030\t \001(\r\"\240\001\n\013NameRenewed\022\014\n\004name\030"
    "\001 \001(\t\022\r\n\005label\030\002 \001(\t\022\014\n\004cost\030\003 \001(\004\022\017\n\007ex"
    "pires\030\004 \001(\004\022\024\n\014block_number\030\005 \001(\t\022\022\n\nblo"
    "ck_hash\030\006 \001(\t\022\030\n\020transaction_hash\030\007 \001(\t\022"
    "\021\n\tlog_index\030\010 \001(\r\"\215\001\n\010Transfer\022\014\n\004from\030"
    "\001 \001(\t\022\n\n\002to\030\002 \001(\t\022\020\n\010token_id\030\003 \001(\t\022\024\n\014b"
    "lock_number\030\004 \001(\t\022\022\n\nblock_hash\030\005 \001(\t\022\030\n"
    "\020transaction_hash\030\006 \001(\t\022\021\n\tlog_index\030\007 \001"
    "(\r\"\222\001\n\020ControllerEvents\022A\n\032controller_na"
    "me_registered\030\001 \003(\0132\035.base_names.v1.Name"
    "Registered\022;\n\027controller_name_renewed\030\002 "
    "\003(\0132\032.base_names.v1.NameRenewed\"G\n\rRever"
    "seEvents\0226\n\017reverse_claimed\030\001 \003(\0132\035.base"
    "_names.v1.ReverseClaimed\"\222\001\n\016ReverseClai"
    "med\022\014\n\004addr\030\001 \001(\t\022\014\n\004node\030\002 \001(\t\022\r\n\005owner"
    "\030\003 \001(\t\022\024\n\014block_number\030\004 \001(\t\022\022\n\nblock_ha"
    "sh\030\005 \001(\t\022\030\n\020transaction_hash\030\006 \001(\t\022\021\n\tlo"
    "g_index\030\007 \001(\r\"\210\002\n\006Domain\022\n\n\002id\030\001 \001(\t\022\014\n\004"
    "name\030\002 \001(\t\022\022\n\nlabel_name\030\003 \001(\t\022\022\n\nlabel_"
    "hash\030\004 \001(\t\022\016\n\006parent\030\005 \001(\t\022\027\n\017subdomain_"
    "count\030\006 \001(\t\022\030\n\020resolved_address\030\007 \001(\t\022\r\n"
    "\005owner\030\010 \001(\t\022\020\n\010resolver\030\t \001(\t\022\013\n\003ttl\030\n "
    "\001(\004\022\023\n\013is_migrated\030\013 \001(\010\022\022\n\ncreated_at\030\014"
    " \001(\004\022\"\n\032subdomain_count_updated_at\030\r \001(\t"
    "\"\271\001\n\014Registration\022\n\n\002id\030\001 \001(\t\022\016\n\006domain\030"
    "\002 \001(\t\022\031\n\021registration_date\030\003 \001(\t\022\023\n\013expi"
    "ry_date\030\004 \001(\t\022\014\n\004cost\030\005 \001(\t\022\022\n\nlabel_nam"
    "e\030\006 \001(\t\022\022\n\nlabel_hash\030\007 \001(\t\022\022\n\nregistran"
    "t\030\010 \001(\t\022\023\n\013label_owner\030\t \001(\t\"\231\001\n\023Reverse"
    "Registration\022\n\n\002id\030\001 \001(\t\022\016\n\006domain\030\002 \001(\t"
    "\022\017\n\007address\030\003 \001(\t\022\024\n\014block_number\030\004 \001(\t\022"
    "\022\n\nblock_hash\030\005 \001(\t\022\030\n\020transaction_hash\030"
    "\006 \001(\t\022\021\n\tlog_index\030\007 \001(\rb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_base_5fnames_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_base_5fnames_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_base_5fnames_2eproto = {
    false,
    false,
    2272,
    descriptor_table_protodef_base_5fnames_2eproto,
    "base_names.proto",
    &descriptor_table_base_5fnames_2eproto_once,
    descriptor_table_base_5fnames_2eproto_deps,
    1,
    14,
    schemas,
    file_default_instances,
    TableStruct_base_5fnames_2eproto::offsets,
    file_level_enum_descriptors_base_5fnames_2eproto,
    file_level_service_descriptors_base_5fnames_2eproto,
};
namespace base_names {
namespace v1 {
// ===================================================================

class RegistryEvents::_Internal {
 public:
};

RegistryEvents::RegistryEvents(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:base_names.v1.RegistryEvents)
}
inline PROTOBUF_NDEBUG_INLINE RegistryEvents::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::base_names::v1::RegistryEvents& from_msg)
      : new_owners_{visibility, arena, from.new_owners_},
        new_resolvers_{visibility, arena, from.new_resolvers_},
        new_ttls_{visibility, arena, from.new_ttls_},
        _cached_size_{0} {}

RegistryEvents::RegistryEvents(
    ::google::protobuf::Arena* arena,
    const RegistryEvents& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegistryEvents* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:base_names.v1.RegistryEvents)
}
inline PROTOBUF_NDEBUG_INLINE RegistryEvents::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : new_owners_{visibility, arena},
        new_resolvers_{visibility, arena},
        new_ttls_{visibility, arena},
        _cached_size_{0} {}

inline void RegistryEvents::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RegistryEvents::~RegistryEvents() {
  // @@protoc_insertion_point(destructor:base_names.v1.RegistryEvents)
  SharedDtor(*this);
}
inline void RegistryEvents::SharedDtor(MessageLite& self) {
  RegistryEvents& this_ = static_cast<RegistryEvents&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* RegistryEvents::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RegistryEvents(arena);
}
constexpr auto RegistryEvents::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RegistryEvents, _impl_.new_owners_) +
          decltype(RegistryEvents::_impl_.new_owners_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RegistryEvents, _impl_.new_resolvers_) +
          decltype(RegistryEvents::_impl_.new_resolvers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RegistryEvents, _impl_.new_ttls_) +
          decltype(RegistryEvents::_impl_.new_ttls_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(RegistryEvents), alignof(RegistryEvents), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RegistryEvents::PlacementNew_,
                                 sizeof(RegistryEvents),
                                 alignof(RegistryEvents));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RegistryEvents::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RegistryEvents_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RegistryEvents::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RegistryEvents>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RegistryEvents::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RegistryEvents>(), &RegistryEvents::ByteSizeLong,
            &RegistryEvents::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RegistryEvents, _impl_._cached_size_),
        false,
    },
    &RegistryEvents::kDescriptorMethods,
    &descriptor_table_base_5fnames_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RegistryEvents::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> RegistryEvents::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::base_names::v1::RegistryEvents>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .base_names.v1.NewOwner new_owners = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RegistryEvents, _impl_.new_owners_)}},
    // repeated .base_names.v1.NewResolver new_resolvers = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(RegistryEvents, _impl_.new_resolvers_)}},
    // repeated .base_names.v1.NewTTL new_ttls = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(RegistryEvents, _impl_.new_ttls_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .base_names.v1.NewOwner new_owners = 1;
    {PROTOBUF_FIELD_OFFSET(RegistryEvents, _impl_.new_owners_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .base_names.v1.NewResolver new_resolvers = 2;
    {PROTOBUF_FIELD_OFFSET(RegistryEvents, _impl_.new_resolvers_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .base_names.v1.NewTTL new_ttls = 3;
    {PROTOBUF_FIELD_OFFSET(RegistryEvents, _impl_.new_ttls_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::base_names::v1::NewOwner>()},
    {::_pbi::TcParser::GetTable<::base_names::v1::NewResolver>()},
    {::_pbi::TcParser::GetTable<::base_names::v1::NewTTL>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RegistryEvents::Clear() {
// @@protoc_insertion_point(message_clear_start:base_names.v1.RegistryEvents)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.new_owners_.Clear();
  _impl_.new_resolvers_.Clear();
  _impl_.new_ttls_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RegistryEvents::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RegistryEvents& this_ = static_cast<const RegistryEvents&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RegistryEvents::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RegistryEvents& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:base_names.v1.RegistryEvents)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .base_names.v1.NewOwner new_owners = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_new_owners_size());
               i < n; i++) {
            const auto& repfield = this_._internal_new_owners().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .base_names.v1.NewResolver new_resolvers = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_new_resolvers_size());
               i < n; i++) {
            const auto& repfield = this_._internal_new_resolvers().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .base_names.v1.NewTTL new_ttls = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_new_ttls_size());
               i < n; i++) {
            const auto& repfield = this_._internal_new_ttls().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:base_names.v1.RegistryEvents)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RegistryEvents::ByteSizeLong(const MessageLite& base) {
          const RegistryEvents& this_ = static_cast<const RegistryEvents&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RegistryEvents::ByteSizeLong() const {
          const RegistryEvents& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:base_names.v1.RegistryEvents)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .base_names.v1.NewOwner new_owners = 1;
            {
              total_size += 1UL * this_._internal_new_owners_size();
              for (const auto& msg : this_._internal_new_owners()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .base_names.v1.NewResolver new_resolvers = 2;
            {
              total_size += 1UL * this_._internal_new_resolvers_size();
              for (const auto& msg : this_._internal_new_resolvers()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .base_names.v1.NewTTL new_ttls = 3;
            {
              total_size += 1UL * this_._internal_new_ttls_size();
              for (const auto& msg : this_._internal_new_ttls()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RegistryEvents::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegistryEvents*>(&to_msg);
  auto& from = static_cast<const RegistryEvents&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:base_names.v1.RegistryEvents)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_new_owners()->MergeFrom(
      from._internal_new_owners());
  _this->_internal_mutable_new_resolvers()->MergeFrom(
      from._internal_new_resolvers());
  _this->_internal_mutable_new_ttls()->MergeFrom(
      from._internal_new_ttls());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegistryEvents::CopyFrom(const RegistryEvents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:base_names.v1.RegistryEvents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegistryEvents::InternalSwap(RegistryEvents* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.new_owners_.InternalSwap(&other->_impl_.new_owners_);
  _impl_.new_resolvers_.InternalSwap(&other->_impl_.new_resolvers_);
  _impl_.new_ttls_.InternalSwap(&other->_impl_.new_ttls_);
}

::google::protobuf::Metadata RegistryEvents::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NewOwner::_Internal {
 public:
};

NewOwner::NewOwner(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:base_names.v1.NewOwner)
}
inline PROTOBUF_NDEBUG_INLINE NewOwner::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::base_names::v1::NewOwner& from_msg)
      : node_(arena, from.node_),
        label_(arena, from.label_),
        owner_(arena, from.owner_),
        block_number_(arena, from.block_number_),
        block_hash_(arena, from.block_hash_),
        transaction_hash_(arena, from.transaction_hash_),
        _cached_size_{0} {}

NewOwner::NewOwner(
    ::google::protobuf::Arena* arena,
    const NewOwner& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NewOwner* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.log_index_ = from._impl_.log_index_;

  // @@protoc_insertion_point(copy_constructor:base_names.v1.NewOwner)
}
inline PROTOBUF_NDEBUG_INLINE NewOwner::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : node_(arena),
        label_(arena),
        owner_(arena),
        block_number_(arena),
        block_hash_(arena),
        transaction_hash_(arena),
        _cached_size_{0} {}

inline void NewOwner::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.log_index_ = {};
}
NewOwner::~NewOwner() {
  // @@protoc_insertion_point(destructor:base_names.v1.NewOwner)
  SharedDtor(*this);
}
inline void NewOwner::SharedDtor(MessageLite& self) {
  NewOwner& this_ = static_cast<NewOwner&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.node_.Destroy();
  this_._impl_.label_.Destroy();
  this_._impl_.owner_.Destroy();
  this_._impl_.block_number_.Destroy();
  this_._impl_.block_hash_.Destroy();
  this_._impl_.transaction_hash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* NewOwner::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NewOwner(arena);
}
constexpr auto NewOwner::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NewOwner),
                                            alignof(NewOwner));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NewOwner::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NewOwner_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NewOwner::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NewOwner>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NewOwner::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NewOwner>(), &NewOwner::ByteSizeLong,
            &NewOwner::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NewOwner, _impl_._cached_size_),
        false,
    },
    &NewOwner::kDescriptorMethods,
    &descriptor_table_base_5fnames_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NewOwner::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 83, 2> NewOwner::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::base_names::v1::NewOwner>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string node = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NewOwner, _impl_.node_)}},
    // string label = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NewOwner, _impl_.label_)}},
    // string owner = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(NewOwner, _impl_.owner_)}},
    // string block_number = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(NewOwner, _impl_.block_number_)}},
    // string block_hash = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(NewOwner, _impl_.block_hash_)}},
    // string transaction_hash = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(NewOwner, _impl_.transaction_hash_)}},
    // uint32 log_index = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NewOwner, _impl_.log_index_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(NewOwner, _impl_.log_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string node = 1;
    {PROTOBUF_FIELD_OFFSET(NewOwner, _impl_.node_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string label = 2;
    {PROTOBUF_FIELD_OFFSET(NewOwner, _impl_.label_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string owner = 3;
    {PROTOBUF_FIELD_OFFSET(NewOwner, _impl_.owner_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string block_number = 4;
    {PROTOBUF_FIELD_OFFSET(NewOwner, _impl_.block_number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string block_hash = 5;
    {PROTOBUF_FIELD_OFFSET(NewOwner, _impl_.block_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string transaction_hash = 6;
    {PROTOBUF_FIELD_OFFSET(NewOwner, _impl_.transaction_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 log_index = 7;
    {PROTOBUF_FIELD_OFFSET(NewOwner, _impl_.log_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\26\4\5\5\14\12\20\0"
    "base_names.v1.NewOwner"
    "node"
    "label"
    "owner"
    "block_number"
    "block_hash"
    "transaction_hash"
  }},
};

PROTOBUF_NOINLINE void NewOwner::Clear() {
// @@protoc_insertion_point(message_clear_start:base_names.v1.NewOwner)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_.ClearToEmpty();
  _impl_.label_.ClearToEmpty();
  _impl_.owner_.ClearToEmpty();
  _impl_.block_number_.ClearToEmpty();
  _impl_.block_hash_.ClearToEmpty();
  _impl_.transaction_hash_.ClearToEmpty();
  _impl_.log_index_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NewOwner::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NewOwner& this_ = static_cast<const NewOwner&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NewOwner::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NewOwner& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:base_names.v1.NewOwner)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string node = 1;
          if (!this_._internal_node().empty()) {
            const std::string& _s = this_._internal_node();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.NewOwner.node");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string label = 2;
          if (!this_._internal_label().empty()) {
            const std::string& _s = this_._internal_label();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.NewOwner.label");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string owner = 3;
          if (!this_._internal_owner().empty()) {
            const std::string& _s = this_._internal_owner();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.NewOwner.owner");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string block_number = 4;
          if (!this_._internal_block_number().empty()) {
            const std::string& _s = this_._internal_block_number();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.NewOwner.block_number");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string block_hash = 5;
          if (!this_._internal_block_hash().empty()) {
            const std::string& _s = this_._internal_block_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.NewOwner.block_hash");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string transaction_hash = 6;
          if (!this_._internal_transaction_hash().empty()) {
            const std::string& _s = this_._internal_transaction_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.NewOwner.transaction_hash");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // uint32 log_index = 7;
          if (this_._internal_log_index() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_log_index(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:base_names.v1.NewOwner)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NewOwner::ByteSizeLong(const MessageLite& base) {
          const NewOwner& this_ = static_cast<const NewOwner&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NewOwner::ByteSizeLong() const {
          const NewOwner& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:base_names.v1.NewOwner)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string node = 1;
            if (!this_._internal_node().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_node());
            }
            // string label = 2;
            if (!this_._internal_label().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_label());
            }
            // string owner = 3;
            if (!this_._internal_owner().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_owner());
            }
            // string block_number = 4;
            if (!this_._internal_block_number().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_block_number());
            }
            // string block_hash = 5;
            if (!this_._internal_block_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_block_hash());
            }
            // string transaction_hash = 6;
            if (!this_._internal_transaction_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_transaction_hash());
            }
            // uint32 log_index = 7;
            if (this_._internal_log_index() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_log_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NewOwner::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NewOwner*>(&to_msg);
  auto& from = static_cast<const NewOwner&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:base_names.v1.NewOwner)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_node().empty()) {
    _this->_internal_set_node(from._internal_node());
  }
  if (!from._internal_label().empty()) {
    _this->_internal_set_label(from._internal_label());
  }
  if (!from._internal_owner().empty()) {
    _this->_internal_set_owner(from._internal_owner());
  }
  if (!from._internal_block_number().empty()) {
    _this->_internal_set_block_number(from._internal_block_number());
  }
  if (!from._internal_block_hash().empty()) {
    _this->_internal_set_block_hash(from._internal_block_hash());
  }
  if (!from._internal_transaction_hash().empty()) {
    _this->_internal_set_transaction_hash(from._internal_transaction_hash());
  }
  if (from._internal_log_index() != 0) {
    _this->_impl_.log_index_ = from._impl_.log_index_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NewOwner::CopyFrom(const NewOwner& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:base_names.v1.NewOwner)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NewOwner::InternalSwap(NewOwner* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_, &other->_impl_.node_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.label_, &other->_impl_.label_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, &other->_impl_.owner_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.block_number_, &other->_impl_.block_number_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.block_hash_, &other->_impl_.block_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transaction_hash_, &other->_impl_.transaction_hash_, arena);
        swap(_impl_.log_index_, other->_impl_.log_index_);
}

::google::protobuf::Metadata NewOwner::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NewResolver::_Internal {
 public:
};

NewResolver::NewResolver(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:base_names.v1.NewResolver)
}
inline PROTOBUF_NDEBUG_INLINE NewResolver::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::base_names::v1::NewResolver& from_msg)
      : node_(arena, from.node_),
        resolver_(arena, from.resolver_),
        block_number_(arena, from.block_number_),
        block_hash_(arena, from.block_hash_),
        transaction_hash_(arena, from.transaction_hash_),
        _cached_size_{0} {}

NewResolver::NewResolver(
    ::google::protobuf::Arena* arena,
    const NewResolver& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NewResolver* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.log_index_ = from._impl_.log_index_;

  // @@protoc_insertion_point(copy_constructor:base_names.v1.NewResolver)
}
inline PROTOBUF_NDEBUG_INLINE NewResolver::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : node_(arena),
        resolver_(arena),
        block_number_(arena),
        block_hash_(arena),
        transaction_hash_(arena),
        _cached_size_{0} {}

inline void NewResolver::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.log_index_ = {};
}
NewResolver::~NewResolver() {
  // @@protoc_insertion_point(destructor:base_names.v1.NewResolver)
  SharedDtor(*this);
}
inline void NewResolver::SharedDtor(MessageLite& self) {
  NewResolver& this_ = static_cast<NewResolver&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.node_.Destroy();
  this_._impl_.resolver_.Destroy();
  this_._impl_.block_number_.Destroy();
  this_._impl_.block_hash_.Destroy();
  this_._impl_.transaction_hash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* NewResolver::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NewResolver(arena);
}
constexpr auto NewResolver::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NewResolver),
                                            alignof(NewResolver));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NewResolver::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NewResolver_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NewResolver::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NewResolver>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NewResolver::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NewResolver>(), &NewResolver::ByteSizeLong,
            &NewResolver::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NewResolver, _impl_._cached_size_),
        false,
    },
    &NewResolver::kDescriptorMethods,
    &descriptor_table_base_5fnames_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NewResolver::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 84, 2> NewResolver::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::base_names::v1::NewResolver>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string node = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NewResolver, _impl_.node_)}},
    // string resolver = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NewResolver, _impl_.resolver_)}},
    // string block_number = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(NewResolver, _impl_.block_number_)}},
    // string block_hash = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(NewResolver, _impl_.block_hash_)}},
    // string transaction_hash = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(NewResolver, _impl_.transaction_hash_)}},
    // uint32 log_index = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NewResolver, _impl_.log_index_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(NewResolver, _impl_.log_index_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string node = 1;
    {PROTOBUF_FIELD_OFFSET(NewResolver, _impl_.node_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string resolver = 2;
    {PROTOBUF_FIELD_OFFSET(NewResolver, _impl_.resolver_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string block_number = 3;
    {PROTOBUF_FIELD_OFFSET(NewResolver, _impl_.block_number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string block_hash = 4;
    {PROTOBUF_FIELD_OFFSET(NewResolver, _impl_.block_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string transaction_hash = 5;
    {PROTOBUF_FIELD_OFFSET(NewResolver, _impl_.transaction_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 log_index = 6;
    {PROTOBUF_FIELD_OFFSET(NewResolver, _impl_.log_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\31\4\10\14\12\20\0\0"
    "base_names.v1.NewResolver"
    "node"
    "resolver"
    "block_number"
    "block_hash"
    "transaction_hash"
  }},
};

PROTOBUF_NOINLINE void NewResolver::Clear() {
// @@protoc_insertion_point(message_clear_start:base_names.v1.NewResolver)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_.ClearToEmpty();
  _impl_.resolver_.ClearToEmpty();
  _impl_.block_number_.ClearToEmpty();
  _impl_.block_hash_.ClearToEmpty();
  _impl_.transaction_hash_.ClearToEmpty();
  _impl_.log_index_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NewResolver::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NewResolver& this_ = static_cast<const NewResolver&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NewResolver::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NewResolver& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:base_names.v1.NewResolver)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string node = 1;
          if (!this_._internal_node().empty()) {
            const std::string& _s = this_._internal_node();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.NewResolver.node");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string resolver = 2;
          if (!this_._internal_resolver().empty()) {
            const std::string& _s = this_._internal_resolver();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.NewResolver.resolver");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string block_number = 3;
          if (!this_._internal_block_number().empty()) {
            const std::string& _s = this_._internal_block_number();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.NewResolver.block_number");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string block_hash = 4;
          if (!this_._internal_block_hash().empty()) {
            const std::string& _s = this_._internal_block_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.NewResolver.block_hash");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string transaction_hash = 5;
          if (!this_._internal_transaction_hash().empty()) {
            const std::string& _s = this_._internal_transaction_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.NewResolver.transaction_hash");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // uint32 log_index = 6;
          if (this_._internal_log_index() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_log_index(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:base_names.v1.NewResolver)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NewResolver::ByteSizeLong(const MessageLite& base) {
          const NewResolver& this_ = static_cast<const NewResolver&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NewResolver::ByteSizeLong() const {
          const NewResolver& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:base_names.v1.NewResolver)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string node = 1;
            if (!this_._internal_node().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_node());
            }
            // string resolver = 2;
            if (!this_._internal_resolver().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_resolver());
            }
            // string block_number = 3;
            if (!this_._internal_block_number().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_block_number());
            }
            // string block_hash = 4;
            if (!this_._internal_block_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_block_hash());
            }
            // string transaction_hash = 5;
            if (!this_._internal_transaction_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_transaction_hash());
            }
            // uint32 log_index = 6;
            if (this_._internal_log_index() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_log_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NewResolver::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NewResolver*>(&to_msg);
  auto& from = static_cast<const NewResolver&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:base_names.v1.NewResolver)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_node().empty()) {
    _this->_internal_set_node(from._internal_node());
  }
  if (!from._internal_resolver().empty()) {
    _this->_internal_set_resolver(from._internal_resolver());
  }
  if (!from._internal_block_number().empty()) {
    _this->_internal_set_block_number(from._internal_block_number());
  }
  if (!from._internal_block_hash().empty()) {
    _this->_internal_set_block_hash(from._internal_block_hash());
  }
  if (!from._internal_transaction_hash().empty()) {
    _this->_internal_set_transaction_hash(from._internal_transaction_hash());
  }
  if (from._internal_log_index() != 0) {
    _this->_impl_.log_index_ = from._impl_.log_index_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NewResolver::CopyFrom(const NewResolver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:base_names.v1.NewResolver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NewResolver::InternalSwap(NewResolver* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_, &other->_impl_.node_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.resolver_, &other->_impl_.resolver_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.block_number_, &other->_impl_.block_number_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.block_hash_, &other->_impl_.block_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transaction_hash_, &other->_impl_.transaction_hash_, arena);
        swap(_impl_.log_index_, other->_impl_.log_index_);
}

::google::protobuf::Metadata NewResolver::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NewTTL::_Internal {
 public:
};

NewTTL::NewTTL(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:base_names.v1.NewTTL)
}
inline PROTOBUF_NDEBUG_INLINE NewTTL::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::base_names::v1::NewTTL& from_msg)
      : node_(arena, from.node_),
        block_number_(arena, from.block_number_),
        block_hash_(arena, from.block_hash_),
        transaction_hash_(arena, from.transaction_hash_),
        _cached_size_{0} {}

NewTTL::NewTTL(
    ::google::protobuf::Arena* arena,
    const NewTTL& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NewTTL* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ttl_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, ttl_),
           offsetof(Impl_, log_index_) -
               offsetof(Impl_, ttl_) +
               sizeof(Impl_::log_index_));

  // @@protoc_insertion_point(copy_constructor:base_names.v1.NewTTL)
}
inline PROTOBUF_NDEBUG_INLINE NewTTL::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : node_(arena),
        block_number_(arena),
        block_hash_(arena),
        transaction_hash_(arena),
        _cached_size_{0} {}

inline void NewTTL::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ttl_),
           0,
           offsetof(Impl_, log_index_) -
               offsetof(Impl_, ttl_) +
               sizeof(Impl_::log_index_));
}
NewTTL::~NewTTL() {
  // @@protoc_insertion_point(destructor:base_names.v1.NewTTL)
  SharedDtor(*this);
}
inline void NewTTL::SharedDtor(MessageLite& self) {
  NewTTL& this_ = static_cast<NewTTL&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.node_.Destroy();
  this_._impl_.block_number_.Destroy();
  this_._impl_.block_hash_.Destroy();
  this_._impl_.transaction_hash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* NewTTL::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NewTTL(arena);
}
constexpr auto NewTTL::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NewTTL),
                                            alignof(NewTTL));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NewTTL::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NewTTL_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NewTTL::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NewTTL>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NewTTL::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NewTTL>(), &NewTTL::ByteSizeLong,
            &NewTTL::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NewTTL, _impl_._cached_size_),
        false,
    },
    &NewTTL::kDescriptorMethods,
    &descriptor_table_base_5fnames_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NewTTL::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 71, 2> NewTTL::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::base_names::v1::NewTTL>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string node = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NewTTL, _impl_.node_)}},
    // uint64 ttl = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(NewTTL, _impl_.ttl_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NewTTL, _impl_.ttl_)}},
    // string block_number = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(NewTTL, _impl_.block_number_)}},
    // string block_hash = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(NewTTL, _impl_.block_hash_)}},
    // string transaction_hash = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(NewTTL, _impl_.transaction_hash_)}},
    // uint32 log_index = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NewTTL, _impl_.log_index_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(NewTTL, _impl_.log_index_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string node = 1;
    {PROTOBUF_FIELD_OFFSET(NewTTL, _impl_.node_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 ttl = 2;
    {PROTOBUF_FIELD_OFFSET(NewTTL, _impl_.ttl_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string block_number = 3;
    {PROTOBUF_FIELD_OFFSET(NewTTL, _impl_.block_number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string block_hash = 4;
    {PROTOBUF_FIELD_OFFSET(NewTTL, _impl_.block_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string transaction_hash = 5;
    {PROTOBUF_FIELD_OFFSET(NewTTL, _impl_.transaction_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 log_index = 6;
    {PROTOBUF_FIELD_OFFSET(NewTTL, _impl_.log_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\24\4\0\14\12\20\0\0"
    "base_names.v1.NewTTL"
    "node"
    "block_number"
    "block_hash"
    "transaction_hash"
  }},
};

PROTOBUF_NOINLINE void NewTTL::Clear() {
// @@protoc_insertion_point(message_clear_start:base_names.v1.NewTTL)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_.ClearToEmpty();
  _impl_.block_number_.ClearToEmpty();
  _impl_.block_hash_.ClearToEmpty();
  _impl_.transaction_hash_.ClearToEmpty();
  ::memset(&_impl_.ttl_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.log_index_) -
      reinterpret_cast<char*>(&_impl_.ttl_)) + sizeof(_impl_.log_index_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NewTTL::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NewTTL& this_ = static_cast<const NewTTL&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NewTTL::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NewTTL& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:base_names.v1.NewTTL)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string node = 1;
          if (!this_._internal_node().empty()) {
            const std::string& _s = this_._internal_node();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.NewTTL.node");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint64 ttl = 2;
          if (this_._internal_ttl() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_ttl(), target);
          }

          // string block_number = 3;
          if (!this_._internal_block_number().empty()) {
            const std::string& _s = this_._internal_block_number();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.NewTTL.block_number");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string block_hash = 4;
          if (!this_._internal_block_hash().empty()) {
            const std::string& _s = this_._internal_block_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.NewTTL.block_hash");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string transaction_hash = 5;
          if (!this_._internal_transaction_hash().empty()) {
            const std::string& _s = this_._internal_transaction_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.NewTTL.transaction_hash");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // uint32 log_index = 6;
          if (this_._internal_log_index() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_log_index(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:base_names.v1.NewTTL)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NewTTL::ByteSizeLong(const MessageLite& base) {
          const NewTTL& this_ = static_cast<const NewTTL&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NewTTL::ByteSizeLong() const {
          const NewTTL& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:base_names.v1.NewTTL)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string node = 1;
            if (!this_._internal_node().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_node());
            }
            // string block_number = 3;
            if (!this_._internal_block_number().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_block_number());
            }
            // string block_hash = 4;
            if (!this_._internal_block_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_block_hash());
            }
            // string transaction_hash = 5;
            if (!this_._internal_transaction_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_transaction_hash());
            }
            // uint64 ttl = 2;
            if (this_._internal_ttl() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_ttl());
            }
            // uint32 log_index = 6;
            if (this_._internal_log_index() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_log_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NewTTL::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NewTTL*>(&to_msg);
  auto& from = static_cast<const NewTTL&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:base_names.v1.NewTTL)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_node().empty()) {
    _this->_internal_set_node(from._internal_node());
  }
  if (!from._internal_block_number().empty()) {
    _this->_internal_set_block_number(from._internal_block_number());
  }
  if (!from._internal_block_hash().empty()) {
    _this->_internal_set_block_hash(from._internal_block_hash());
  }
  if (!from._internal_transaction_hash().empty()) {
    _this->_internal_set_transaction_hash(from._internal_transaction_hash());
  }
  if (from._internal_ttl() != 0) {
    _this->_impl_.ttl_ = from._impl_.ttl_;
  }
  if (from._internal_log_index() != 0) {
    _this->_impl_.log_index_ = from._impl_.log_index_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NewTTL::CopyFrom(const NewTTL& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:base_names.v1.NewTTL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NewTTL::InternalSwap(NewTTL* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_, &other->_impl_.node_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.block_number_, &other->_impl_.block_number_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.block_hash_, &other->_impl_.block_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transaction_hash_, &other->_impl_.transaction_hash_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NewTTL, _impl_.log_index_)
      + sizeof(NewTTL::_impl_.log_index_)
      - PROTOBUF_FIELD_OFFSET(NewTTL, _impl_.ttl_)>(
          reinterpret_cast<char*>(&_impl_.ttl_),
          reinterpret_cast<char*>(&other->_impl_.ttl_));
}

::google::protobuf::Metadata NewTTL::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegistrarEvents::_Internal {
 public:
};

RegistrarEvents::RegistrarEvents(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:base_names.v1.RegistrarEvents)
}
inline PROTOBUF_NDEBUG_INLINE RegistrarEvents::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::base_names::v1::RegistrarEvents& from_msg)
      : name_registered_{visibility, arena, from.name_registered_},
        name_renewed_{visibility, arena, from.name_renewed_},
        transfer_{visibility, arena, from.transfer_},
        _cached_size_{0} {}

RegistrarEvents::RegistrarEvents(
    ::google::protobuf::Arena* arena,
    const RegistrarEvents& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegistrarEvents* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:base_names.v1.RegistrarEvents)
}
inline PROTOBUF_NDEBUG_INLINE RegistrarEvents::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_registered_{visibility, arena},
        name_renewed_{visibility, arena},
        transfer_{visibility, arena},
        _cached_size_{0} {}

inline void RegistrarEvents::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RegistrarEvents::~RegistrarEvents() {
  // @@protoc_insertion_point(destructor:base_names.v1.RegistrarEvents)
  SharedDtor(*this);
}
inline void RegistrarEvents::SharedDtor(MessageLite& self) {
  RegistrarEvents& this_ = static_cast<RegistrarEvents&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* RegistrarEvents::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RegistrarEvents(arena);
}
constexpr auto RegistrarEvents::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RegistrarEvents, _impl_.name_registered_) +
          decltype(RegistrarEvents::_impl_.name_registered_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RegistrarEvents, _impl_.name_renewed_) +
          decltype(RegistrarEvents::_impl_.name_renewed_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RegistrarEvents, _impl_.transfer_) +
          decltype(RegistrarEvents::_impl_.transfer_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(RegistrarEvents), alignof(RegistrarEvents), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RegistrarEvents::PlacementNew_,
                                 sizeof(RegistrarEvents),
                                 alignof(RegistrarEvents));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RegistrarEvents::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RegistrarEvents_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RegistrarEvents::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RegistrarEvents>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RegistrarEvents::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RegistrarEvents>(), &RegistrarEvents::ByteSizeLong,
            &RegistrarEvents::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RegistrarEvents, _impl_._cached_size_),
        false,
    },
    &RegistrarEvents::kDescriptorMethods,
    &descriptor_table_base_5fnames_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RegistrarEvents::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> RegistrarEvents::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::base_names::v1::RegistrarEvents>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .base_names.v1.NameRegistered name_registered = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RegistrarEvents, _impl_.name_registered_)}},
    // repeated .base_names.v1.NameRenewed name_renewed = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(RegistrarEvents, _impl_.name_renewed_)}},
    // repeated .base_names.v1.Transfer transfer = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(RegistrarEvents, _impl_.transfer_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .base_names.v1.NameRegistered name_registered = 1;
    {PROTOBUF_FIELD_OFFSET(RegistrarEvents, _impl_.name_registered_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .base_names.v1.NameRenewed name_renewed = 2;
    {PROTOBUF_FIELD_OFFSET(RegistrarEvents, _impl_.name_renewed_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .base_names.v1.Transfer transfer = 3;
    {PROTOBUF_FIELD_OFFSET(RegistrarEvents, _impl_.transfer_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::base_names::v1::NameRegistered>()},
    {::_pbi::TcParser::GetTable<::base_names::v1::NameRenewed>()},
    {::_pbi::TcParser::GetTable<::base_names::v1::Transfer>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RegistrarEvents::Clear() {
// @@protoc_insertion_point(message_clear_start:base_names.v1.RegistrarEvents)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_registered_.Clear();
  _impl_.name_renewed_.Clear();
  _impl_.transfer_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RegistrarEvents::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RegistrarEvents& this_ = static_cast<const RegistrarEvents&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RegistrarEvents::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RegistrarEvents& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:base_names.v1.RegistrarEvents)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .base_names.v1.NameRegistered name_registered = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_name_registered_size());
               i < n; i++) {
            const auto& repfield = this_._internal_name_registered().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .base_names.v1.NameRenewed name_renewed = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_name_renewed_size());
               i < n; i++) {
            const auto& repfield = this_._internal_name_renewed().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .base_names.v1.Transfer transfer = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_transfer_size());
               i < n; i++) {
            const auto& repfield = this_._internal_transfer().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:base_names.v1.RegistrarEvents)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RegistrarEvents::ByteSizeLong(const MessageLite& base) {
          const RegistrarEvents& this_ = static_cast<const RegistrarEvents&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RegistrarEvents::ByteSizeLong() const {
          const RegistrarEvents& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:base_names.v1.RegistrarEvents)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .base_names.v1.NameRegistered name_registered = 1;
            {
              total_size += 1UL * this_._internal_name_registered_size();
              for (const auto& msg : this_._internal_name_registered()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .base_names.v1.NameRenewed name_renewed = 2;
            {
              total_size += 1UL * this_._internal_name_renewed_size();
              for (const auto& msg : this_._internal_name_renewed()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .base_names.v1.Transfer transfer = 3;
            {
              total_size += 1UL * this_._internal_transfer_size();
              for (const auto& msg : this_._internal_transfer()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RegistrarEvents::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegistrarEvents*>(&to_msg);
  auto& from = static_cast<const RegistrarEvents&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:base_names.v1.RegistrarEvents)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_name_registered()->MergeFrom(
      from._internal_name_registered());
  _this->_internal_mutable_name_renewed()->MergeFrom(
      from._internal_name_renewed());
  _this->_internal_mutable_transfer()->MergeFrom(
      from._internal_transfer());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegistrarEvents::CopyFrom(const RegistrarEvents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:base_names.v1.RegistrarEvents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegistrarEvents::InternalSwap(RegistrarEvents* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.name_registered_.InternalSwap(&other->_impl_.name_registered_);
  _impl_.name_renewed_.InternalSwap(&other->_impl_.name_renewed_);
  _impl_.transfer_.InternalSwap(&other->_impl_.transfer_);
}

::google::protobuf::Metadata RegistrarEvents::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NameRegistered::_Internal {
 public:
};

NameRegistered::NameRegistered(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:base_names.v1.NameRegistered)
}
inline PROTOBUF_NDEBUG_INLINE NameRegistered::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::base_names::v1::NameRegistered& from_msg)
      : name_(arena, from.name_),
        label_(arena, from.label_),
        owner_(arena, from.owner_),
        block_number_(arena, from.block_number_),
        block_hash_(arena, from.block_hash_),
        transaction_hash_(arena, from.transaction_hash_),
        _cached_size_{0} {}

NameRegistered::NameRegistered(
    ::google::protobuf::Arena* arena,
    const NameRegistered& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NameRegistered* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cost_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, cost_),
           offsetof(Impl_, log_index_) -
               offsetof(Impl_, cost_) +
               sizeof(Impl_::log_index_));

  // @@protoc_insertion_point(copy_constructor:base_names.v1.NameRegistered)
}
inline PROTOBUF_NDEBUG_INLINE NameRegistered::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        label_(arena),
        owner_(arena),
        block_number_(arena),
        block_hash_(arena),
        transaction_hash_(arena),
        _cached_size_{0} {}

inline void NameRegistered::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cost_),
           0,
           offsetof(Impl_, log_index_) -
               offsetof(Impl_, cost_) +
               sizeof(Impl_::log_index_));
}
NameRegistered::~NameRegistered() {
  // @@protoc_insertion_point(destructor:base_names.v1.NameRegistered)
  SharedDtor(*this);
}
inline void NameRegistered::SharedDtor(MessageLite& self) {
  NameRegistered& this_ = static_cast<NameRegistered&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.label_.Destroy();
  this_._impl_.owner_.Destroy();
  this_._impl_.block_number_.Destroy();
  this_._impl_.block_hash_.Destroy();
  this_._impl_.transaction_hash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* NameRegistered::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NameRegistered(arena);
}
constexpr auto NameRegistered::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NameRegistered),
                                            alignof(NameRegistered));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NameRegistered::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NameRegistered_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NameRegistered::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NameRegistered>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NameRegistered::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NameRegistered>(), &NameRegistered::ByteSizeLong,
            &NameRegistered::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NameRegistered, _impl_._cached_size_),
        false,
    },
    &NameRegistered::kDescriptorMethods,
    &descriptor_table_base_5fnames_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NameRegistered::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 97, 2> NameRegistered::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::base_names::v1::NameRegistered>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NameRegistered, _impl_.name_)}},
    // string label = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NameRegistered, _impl_.label_)}},
    // string owner = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(NameRegistered, _impl_.owner_)}},
    // uint64 cost = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(NameRegistered, _impl_.cost_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(NameRegistered, _impl_.cost_)}},
    // uint64 expires = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(NameRegistered, _impl_.expires_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(NameRegistered, _impl_.expires_)}},
    // string block_number = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(NameRegistered, _impl_.block_number_)}},
    // string block_hash = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(NameRegistered, _impl_.block_hash_)}},
    // string transaction_hash = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(NameRegistered, _impl_.transaction_hash_)}},
    // uint32 log_index = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NameRegistered, _impl_.log_index_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(NameRegistered, _impl_.log_index_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(NameRegistered, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string label = 2;
    {PROTOBUF_FIELD_OFFSET(NameRegistered, _impl_.label_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string owner = 3;
    {PROTOBUF_FIELD_OFFSET(NameRegistered, _impl_.owner_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 cost = 4;
    {PROTOBUF_FIELD_OFFSET(NameRegistered, _impl_.cost_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 expires = 5;
    {PROTOBUF_FIELD_OFFSET(NameRegistered, _impl_.expires_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string block_number = 6;
    {PROTOBUF_FIELD_OFFSET(NameRegistered, _impl_.block_number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string block_hash = 7;
    {PROTOBUF_FIELD_OFFSET(NameRegistered, _impl_.block_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string transaction_hash = 8;
    {PROTOBUF_FIELD_OFFSET(NameRegistered, _impl_.transaction_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 log_index = 9;
    {PROTOBUF_FIELD_OFFSET(NameRegistered, _impl_.log_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\34\4\5\5\0\0\14\12\20\0\0\0\0\0\0\0"
    "base_names.v1.NameRegistered"
    "name"
    "label"
    "owner"
    "block_number"
    "block_hash"
    "transaction_hash"
  }},
};

PROTOBUF_NOINLINE void NameRegistered::Clear() {
// @@protoc_insertion_point(message_clear_start:base_names.v1.NameRegistered)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.label_.ClearToEmpty();
  _impl_.owner_.ClearToEmpty();
  _impl_.block_number_.ClearToEmpty();
  _impl_.block_hash_.ClearToEmpty();
  _impl_.transaction_hash_.ClearToEmpty();
  ::memset(&_impl_.cost_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.log_index_) -
      reinterpret_cast<char*>(&_impl_.cost_)) + sizeof(_impl_.log_index_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NameRegistered::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NameRegistered& this_ = static_cast<const NameRegistered&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NameRegistered::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NameRegistered& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:base_names.v1.NameRegistered)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.NameRegistered.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string label = 2;
          if (!this_._internal_label().empty()) {
            const std::string& _s = this_._internal_label();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.NameRegistered.label");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string owner = 3;
          if (!this_._internal_owner().empty()) {
            const std::string& _s = this_._internal_owner();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.NameRegistered.owner");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // uint64 cost = 4;
          if (this_._internal_cost() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                4, this_._internal_cost(), target);
          }

          // uint64 expires = 5;
          if (this_._internal_expires() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                5, this_._internal_expires(), target);
          }

          // string block_number = 6;
          if (!this_._internal_block_number().empty()) {
            const std::string& _s = this_._internal_block_number();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.NameRegistered.block_number");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string block_hash = 7;
          if (!this_._internal_block_hash().empty()) {
            const std::string& _s = this_._internal_block_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.NameRegistered.block_hash");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // string transaction_hash = 8;
          if (!this_._internal_transaction_hash().empty()) {
            const std::string& _s = this_._internal_transaction_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.NameRegistered.transaction_hash");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // uint32 log_index = 9;
          if (this_._internal_log_index() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                9, this_._internal_log_index(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:base_names.v1.NameRegistered)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NameRegistered::ByteSizeLong(const MessageLite& base) {
          const NameRegistered& this_ = static_cast<const NameRegistered&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NameRegistered::ByteSizeLong() const {
          const NameRegistered& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:base_names.v1.NameRegistered)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string label = 2;
            if (!this_._internal_label().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_label());
            }
            // string owner = 3;
            if (!this_._internal_owner().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_owner());
            }
            // string block_number = 6;
            if (!this_._internal_block_number().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_block_number());
            }
            // string block_hash = 7;
            if (!this_._internal_block_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_block_hash());
            }
            // string transaction_hash = 8;
            if (!this_._internal_transaction_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_transaction_hash());
            }
            // uint64 cost = 4;
            if (this_._internal_cost() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_cost());
            }
            // uint64 expires = 5;
            if (this_._internal_expires() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_expires());
            }
            // uint32 log_index = 9;
            if (this_._internal_log_index() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_log_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NameRegistered::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NameRegistered*>(&to_msg);
  auto& from = static_cast<const NameRegistered&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:base_names.v1.NameRegistered)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_label().empty()) {
    _this->_internal_set_label(from._internal_label());
  }
  if (!from._internal_owner().empty()) {
    _this->_internal_set_owner(from._internal_owner());
  }
  if (!from._internal_block_number().empty()) {
    _this->_internal_set_block_number(from._internal_block_number());
  }
  if (!from._internal_block_hash().empty()) {
    _this->_internal_set_block_hash(from._internal_block_hash());
  }
  if (!from._internal_transaction_hash().empty()) {
    _this->_internal_set_transaction_hash(from._internal_transaction_hash());
  }
  if (from._internal_cost() != 0) {
    _this->_impl_.cost_ = from._impl_.cost_;
  }
  if (from._internal_expires() != 0) {
    _this->_impl_.expires_ = from._impl_.expires_;
  }
  if (from._internal_log_index() != 0) {
    _this->_impl_.log_index_ = from._impl_.log_index_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NameRegistered::CopyFrom(const NameRegistered& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:base_names.v1.NameRegistered)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NameRegistered::InternalSwap(NameRegistered* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.label_, &other->_impl_.label_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, &other->_impl_.owner_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.block_number_, &other->_impl_.block_number_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.block_hash_, &other->_impl_.block_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transaction_hash_, &other->_impl_.transaction_hash_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NameRegistered, _impl_.log_index_)
      + sizeof(NameRegistered::_impl_.log_index_)
      - PROTOBUF_FIELD_OFFSET(NameRegistered, _impl_.cost_)>(
          reinterpret_cast<char*>(&_impl_.cost_),
          reinterpret_cast<char*>(&other->_impl_.cost_));
}

::google::protobuf::Metadata NameRegistered::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NameRenewed::_Internal {
 public:
};

NameRenewed::NameRenewed(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:base_names.v1.NameRenewed)
}
inline PROTOBUF_NDEBUG_INLINE NameRenewed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::base_names::v1::NameRenewed& from_msg)
      : name_(arena, from.name_),
        label_(arena, from.label_),
        block_number_(arena, from.block_number_),
        block_hash_(arena, from.block_hash_),
        transaction_hash_(arena, from.transaction_hash_),
        _cached_size_{0} {}

NameRenewed::NameRenewed(
    ::google::protobuf::Arena* arena,
    const NameRenewed& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NameRenewed* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cost_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, cost_),
           offsetof(Impl_, log_index_) -
               offsetof(Impl_, cost_) +
               sizeof(Impl_::log_index_));

  // @@protoc_insertion_point(copy_constructor:base_names.v1.NameRenewed)
}
inline PROTOBUF_NDEBUG_INLINE NameRenewed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        label_(arena),
        block_number_(arena),
        block_hash_(arena),
        transaction_hash_(arena),
        _cached_size_{0} {}

inline void NameRenewed::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cost_),
           0,
           offsetof(Impl_, log_index_) -
               offsetof(Impl_, cost_) +
               sizeof(Impl_::log_index_));
}
NameRenewed::~NameRenewed() {
  // @@protoc_insertion_point(destructor:base_names.v1.NameRenewed)
  SharedDtor(*this);
}
inline void NameRenewed::SharedDtor(MessageLite& self) {
  NameRenewed& this_ = static_cast<NameRenewed&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.label_.Destroy();
  this_._impl_.block_number_.Destroy();
  this_._impl_.block_hash_.Destroy();
  this_._impl_.transaction_hash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* NameRenewed::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NameRenewed(arena);
}
constexpr auto NameRenewed::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NameRenewed),
                                            alignof(NameRenewed));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NameRenewed::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NameRenewed_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NameRenewed::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NameRenewed>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NameRenewed::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NameRenewed>(), &NameRenewed::ByteSizeLong,
            &NameRenewed::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NameRenewed, _impl_._cached_size_),
        false,
    },
    &NameRenewed::kDescriptorMethods,
    &descriptor_table_base_5fnames_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NameRenewed::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 89, 2> NameRenewed::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::base_names::v1::NameRenewed>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 log_index = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NameRenewed, _impl_.log_index_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(NameRenewed, _impl_.log_index_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NameRenewed, _impl_.name_)}},
    // string label = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NameRenewed, _impl_.label_)}},
    // uint64 cost = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(NameRenewed, _impl_.cost_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(NameRenewed, _impl_.cost_)}},
    // uint64 expires = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(NameRenewed, _impl_.expires_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(NameRenewed, _impl_.expires_)}},
    // string block_number = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(NameRenewed, _impl_.block_number_)}},
    // string block_hash = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(NameRenewed, _impl_.block_hash_)}},
    // string transaction_hash = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(NameRenewed, _impl_.transaction_hash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(NameRenewed, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string label = 2;
    {PROTOBUF_FIELD_OFFSET(NameRenewed, _impl_.label_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 cost = 3;
    {PROTOBUF_FIELD_OFFSET(NameRenewed, _impl_.cost_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 expires = 4;
    {PROTOBUF_FIELD_OFFSET(NameRenewed, _impl_.expires_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string block_number = 5;
    {PROTOBUF_FIELD_OFFSET(NameRenewed, _impl_.block_number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string block_hash = 6;
    {PROTOBUF_FIELD_OFFSET(NameRenewed, _impl_.block_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string transaction_hash = 7;
    {PROTOBUF_FIELD_OFFSET(NameRenewed, _impl_.transaction_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 log_index = 8;
    {PROTOBUF_FIELD_OFFSET(NameRenewed, _impl_.log_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\31\4\5\0\0\14\12\20\0\0\0\0\0\0\0\0"
    "base_names.v1.NameRenewed"
    "name"
    "label"
    "block_number"
    "block_hash"
    "transaction_hash"
  }},
};

PROTOBUF_NOINLINE void NameRenewed::Clear() {
// @@protoc_insertion_point(message_clear_start:base_names.v1.NameRenewed)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.label_.ClearToEmpty();
  _impl_.block_number_.ClearToEmpty();
  _impl_.block_hash_.ClearToEmpty();
  _impl_.transaction_hash_.ClearToEmpty();
  ::memset(&_impl_.cost_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.log_index_) -
      reinterpret_cast<char*>(&_impl_.cost_)) + sizeof(_impl_.log_index_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NameRenewed::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NameRenewed& this_ = static_cast<const NameRenewed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NameRenewed::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NameRenewed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:base_names.v1.NameRenewed)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.NameRenewed.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string label = 2;
          if (!this_._internal_label().empty()) {
            const std::string& _s = this_._internal_label();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.NameRenewed.label");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint64 cost = 3;
          if (this_._internal_cost() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_cost(), target);
          }

          // uint64 expires = 4;
          if (this_._internal_expires() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                4, this_._internal_expires(), target);
          }

          // string block_number = 5;
          if (!this_._internal_block_number().empty()) {
            const std::string& _s = this_._internal_block_number();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.NameRenewed.block_number");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string block_hash = 6;
          if (!this_._internal_block_hash().empty()) {
            const std::string& _s = this_._internal_block_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.NameRenewed.block_hash");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string transaction_hash = 7;
          if (!this_._internal_transaction_hash().empty()) {
            const std::string& _s = this_._internal_transaction_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.NameRenewed.transaction_hash");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // uint32 log_index = 8;
          if (this_._internal_log_index() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                8, this_._internal_log_index(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:base_names.v1.NameRenewed)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NameRenewed::ByteSizeLong(const MessageLite& base) {
          const NameRenewed& this_ = static_cast<const NameRenewed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NameRenewed::ByteSizeLong() const {
          const NameRenewed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:base_names.v1.NameRenewed)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string label = 2;
            if (!this_._internal_label().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_label());
            }
            // string block_number = 5;
            if (!this_._internal_block_number().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_block_number());
            }
            // string block_hash = 6;
            if (!this_._internal_block_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_block_hash());
            }
            // string transaction_hash = 7;
            if (!this_._internal_transaction_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_transaction_hash());
            }
            // uint64 cost = 3;
            if (this_._internal_cost() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_cost());
            }
            // uint64 expires = 4;
            if (this_._internal_expires() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_expires());
            }
            // uint32 log_index = 8;
            if (this_._internal_log_index() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_log_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NameRenewed::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NameRenewed*>(&to_msg);
  auto& from = static_cast<const NameRenewed&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:base_names.v1.NameRenewed)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_label().empty()) {
    _this->_internal_set_label(from._internal_label());
  }
  if (!from._internal_block_number().empty()) {
    _this->_internal_set_block_number(from._internal_block_number());
  }
  if (!from._internal_block_hash().empty()) {
    _this->_internal_set_block_hash(from._internal_block_hash());
  }
  if (!from._internal_transaction_hash().empty()) {
    _this->_internal_set_transaction_hash(from._internal_transaction_hash());
  }
  if (from._internal_cost() != 0) {
    _this->_impl_.cost_ = from._impl_.cost_;
  }
  if (from._internal_expires() != 0) {
    _this->_impl_.expires_ = from._impl_.expires_;
  }
  if (from._internal_log_index() != 0) {
    _this->_impl_.log_index_ = from._impl_.log_index_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NameRenewed::CopyFrom(const NameRenewed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:base_names.v1.NameRenewed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NameRenewed::InternalSwap(NameRenewed* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.label_, &other->_impl_.label_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.block_number_, &other->_impl_.block_number_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.block_hash_, &other->_impl_.block_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transaction_hash_, &other->_impl_.transaction_hash_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NameRenewed, _impl_.log_index_)
      + sizeof(NameRenewed::_impl_.log_index_)
      - PROTOBUF_FIELD_OFFSET(NameRenewed, _impl_.cost_)>(
          reinterpret_cast<char*>(&_impl_.cost_),
          reinterpret_cast<char*>(&other->_impl_.cost_));
}

::google::protobuf::Metadata NameRenewed::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Transfer::_Internal {
 public:
};

Transfer::Transfer(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:base_names.v1.Transfer)
}
inline PROTOBUF_NDEBUG_INLINE Transfer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::base_names::v1::Transfer& from_msg)
      : from_(arena, from.from_),
        to_(arena, from.to_),
        token_id_(arena, from.token_id_),
        block_number_(arena, from.block_number_),
        block_hash_(arena, from.block_hash_),
        transaction_hash_(arena, from.transaction_hash_),
        _cached_size_{0} {}

Transfer::Transfer(
    ::google::protobuf::Arena* arena,
    const Transfer& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Transfer* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.log_index_ = from._impl_.log_index_;

  // @@protoc_insertion_point(copy_constructor:base_names.v1.Transfer)
}
inline PROTOBUF_NDEBUG_INLINE Transfer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : from_(arena),
        to_(arena),
        token_id_(arena),
        block_number_(arena),
        block_hash_(arena),
        transaction_hash_(arena),
        _cached_size_{0} {}

inline void Transfer::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.log_index_ = {};
}
Transfer::~Transfer() {
  // @@protoc_insertion_point(destructor:base_names.v1.Transfer)
  SharedDtor(*this);
}
inline void Transfer::SharedDtor(MessageLite& self) {
  Transfer& this_ = static_cast<Transfer&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.from_.Destroy();
  this_._impl_.to_.Destroy();
  this_._impl_.token_id_.Destroy();
  this_._impl_.block_number_.Destroy();
  this_._impl_.block_hash_.Destroy();
  this_._impl_.transaction_hash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Transfer::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Transfer(arena);
}
constexpr auto Transfer::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Transfer),
                                            alignof(Transfer));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Transfer::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Transfer_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Transfer::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Transfer>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Transfer::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Transfer>(), &Transfer::ByteSizeLong,
            &Transfer::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Transfer, _impl_._cached_size_),
        false,
    },
    &Transfer::kDescriptorMethods,
    &descriptor_table_base_5fnames_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Transfer::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 83, 2> Transfer::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::base_names::v1::Transfer>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string from = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Transfer, _impl_.from_)}},
    // string to = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Transfer, _impl_.to_)}},
    // string token_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Transfer, _impl_.token_id_)}},
    // string block_number = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Transfer, _impl_.block_number_)}},
    // string block_hash = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Transfer, _impl_.block_hash_)}},
    // string transaction_hash = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Transfer, _impl_.transaction_hash_)}},
    // uint32 log_index = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Transfer, _impl_.log_index_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Transfer, _impl_.log_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string from = 1;
    {PROTOBUF_FIELD_OFFSET(Transfer, _impl_.from_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string to = 2;
    {PROTOBUF_FIELD_OFFSET(Transfer, _impl_.to_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string token_id = 3;
    {PROTOBUF_FIELD_OFFSET(Transfer, _impl_.token_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string block_number = 4;
    {PROTOBUF_FIELD_OFFSET(Transfer, _impl_.block_number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string block_hash = 5;
    {PROTOBUF_FIELD_OFFSET(Transfer, _impl_.block_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string transaction_hash = 6;
    {PROTOBUF_FIELD_OFFSET(Transfer, _impl_.transaction_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 log_index = 7;
    {PROTOBUF_FIELD_OFFSET(Transfer, _impl_.log_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\26\4\2\10\14\12\20\0"
    "base_names.v1.Transfer"
    "from"
    "to"
    "token_id"
    "block_number"
    "block_hash"
    "transaction_hash"
  }},
};

PROTOBUF_NOINLINE void Transfer::Clear() {
// @@protoc_insertion_point(message_clear_start:base_names.v1.Transfer)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.from_.ClearToEmpty();
  _impl_.to_.ClearToEmpty();
  _impl_.token_id_.ClearToEmpty();
  _impl_.block_number_.ClearToEmpty();
  _impl_.block_hash_.ClearToEmpty();
  _impl_.transaction_hash_.ClearToEmpty();
  _impl_.log_index_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Transfer::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Transfer& this_ = static_cast<const Transfer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Transfer::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Transfer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:base_names.v1.Transfer)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string from = 1;
          if (!this_._internal_from().empty()) {
            const std::string& _s = this_._internal_from();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.Transfer.from");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string to = 2;
          if (!this_._internal_to().empty()) {
            const std::string& _s = this_._internal_to();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.Transfer.to");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string token_id = 3;
          if (!this_._internal_token_id().empty()) {
            const std::string& _s = this_._internal_token_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.Transfer.token_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string block_number = 4;
          if (!this_._internal_block_number().empty()) {
            const std::string& _s = this_._internal_block_number();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.Transfer.block_number");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string block_hash = 5;
          if (!this_._internal_block_hash().empty()) {
            const std::string& _s = this_._internal_block_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.Transfer.block_hash");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string transaction_hash = 6;
          if (!this_._internal_transaction_hash().empty()) {
            const std::string& _s = this_._internal_transaction_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.Transfer.transaction_hash");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // uint32 log_index = 7;
          if (this_._internal_log_index() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_log_index(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:base_names.v1.Transfer)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Transfer::ByteSizeLong(const MessageLite& base) {
          const Transfer& this_ = static_cast<const Transfer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Transfer::ByteSizeLong() const {
          const Transfer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:base_names.v1.Transfer)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string from = 1;
            if (!this_._internal_from().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_from());
            }
            // string to = 2;
            if (!this_._internal_to().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_to());
            }
            // string token_id = 3;
            if (!this_._internal_token_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_token_id());
            }
            // string block_number = 4;
            if (!this_._internal_block_number().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_block_number());
            }
            // string block_hash = 5;
            if (!this_._internal_block_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_block_hash());
            }
            // string transaction_hash = 6;
            if (!this_._internal_transaction_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_transaction_hash());
            }
            // uint32 log_index = 7;
            if (this_._internal_log_index() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_log_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Transfer::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Transfer*>(&to_msg);
  auto& from = static_cast<const Transfer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:base_names.v1.Transfer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_from().empty()) {
    _this->_internal_set_from(from._internal_from());
  }
  if (!from._internal_to().empty()) {
    _this->_internal_set_to(from._internal_to());
  }
  if (!from._internal_token_id().empty()) {
    _this->_internal_set_token_id(from._internal_token_id());
  }
  if (!from._internal_block_number().empty()) {
    _this->_internal_set_block_number(from._internal_block_number());
  }
  if (!from._internal_block_hash().empty()) {
    _this->_internal_set_block_hash(from._internal_block_hash());
  }
  if (!from._internal_transaction_hash().empty()) {
    _this->_internal_set_transaction_hash(from._internal_transaction_hash());
  }
  if (from._internal_log_index() != 0) {
    _this->_impl_.log_index_ = from._impl_.log_index_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Transfer::CopyFrom(const Transfer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:base_names.v1.Transfer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Transfer::InternalSwap(Transfer* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.from_, &other->_impl_.from_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.to_, &other->_impl_.to_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_id_, &other->_impl_.token_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.block_number_, &other->_impl_.block_number_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.block_hash_, &other->_impl_.block_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transaction_hash_, &other->_impl_.transaction_hash_, arena);
        swap(_impl_.log_index_, other->_impl_.log_index_);
}

::google::protobuf::Metadata Transfer::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ControllerEvents::_Internal {
 public:
};

ControllerEvents::ControllerEvents(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:base_names.v1.ControllerEvents)
}
inline PROTOBUF_NDEBUG_INLINE ControllerEvents::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::base_names::v1::ControllerEvents& from_msg)
      : controller_name_registered_{visibility, arena, from.controller_name_registered_},
        controller_name_renewed_{visibility, arena, from.controller_name_renewed_},
        _cached_size_{0} {}

ControllerEvents::ControllerEvents(
    ::google::protobuf::Arena* arena,
    const ControllerEvents& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ControllerEvents* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:base_names.v1.ControllerEvents)
}
inline PROTOBUF_NDEBUG_INLINE ControllerEvents::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : controller_name_registered_{visibility, arena},
        controller_name_renewed_{visibility, arena},
        _cached_size_{0} {}

inline void ControllerEvents::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ControllerEvents::~ControllerEvents() {
  // @@protoc_insertion_point(destructor:base_names.v1.ControllerEvents)
  SharedDtor(*this);
}
inline void ControllerEvents::SharedDtor(MessageLite& self) {
  ControllerEvents& this_ = static_cast<ControllerEvents&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ControllerEvents::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ControllerEvents(arena);
}
constexpr auto ControllerEvents::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ControllerEvents, _impl_.controller_name_registered_) +
          decltype(ControllerEvents::_impl_.controller_name_registered_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ControllerEvents, _impl_.controller_name_renewed_) +
          decltype(ControllerEvents::_impl_.controller_name_renewed_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ControllerEvents), alignof(ControllerEvents), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ControllerEvents::PlacementNew_,
                                 sizeof(ControllerEvents),
                                 alignof(ControllerEvents));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ControllerEvents::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ControllerEvents_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ControllerEvents::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ControllerEvents>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ControllerEvents::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ControllerEvents>(), &ControllerEvents::ByteSizeLong,
            &ControllerEvents::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ControllerEvents, _impl_._cached_size_),
        false,
    },
    &ControllerEvents::kDescriptorMethods,
    &descriptor_table_base_5fnames_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ControllerEvents::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ControllerEvents::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::base_names::v1::ControllerEvents>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .base_names.v1.NameRenewed controller_name_renewed = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(ControllerEvents, _impl_.controller_name_renewed_)}},
    // repeated .base_names.v1.NameRegistered controller_name_registered = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ControllerEvents, _impl_.controller_name_registered_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .base_names.v1.NameRegistered controller_name_registered = 1;
    {PROTOBUF_FIELD_OFFSET(ControllerEvents, _impl_.controller_name_registered_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .base_names.v1.NameRenewed controller_name_renewed = 2;
    {PROTOBUF_FIELD_OFFSET(ControllerEvents, _impl_.controller_name_renewed_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::base_names::v1::NameRegistered>()},
    {::_pbi::TcParser::GetTable<::base_names::v1::NameRenewed>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ControllerEvents::Clear() {
// @@protoc_insertion_point(message_clear_start:base_names.v1.ControllerEvents)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.controller_name_registered_.Clear();
  _impl_.controller_name_renewed_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ControllerEvents::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ControllerEvents& this_ = static_cast<const ControllerEvents&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ControllerEvents::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ControllerEvents& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:base_names.v1.ControllerEvents)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .base_names.v1.NameRegistered controller_name_registered = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_controller_name_registered_size());
               i < n; i++) {
            const auto& repfield = this_._internal_controller_name_registered().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .base_names.v1.NameRenewed controller_name_renewed = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_controller_name_renewed_size());
               i < n; i++) {
            const auto& repfield = this_._internal_controller_name_renewed().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:base_names.v1.ControllerEvents)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ControllerEvents::ByteSizeLong(const MessageLite& base) {
          const ControllerEvents& this_ = static_cast<const ControllerEvents&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ControllerEvents::ByteSizeLong() const {
          const ControllerEvents& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:base_names.v1.ControllerEvents)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .base_names.v1.NameRegistered controller_name_registered = 1;
            {
              total_size += 1UL * this_._internal_controller_name_registered_size();
              for (const auto& msg : this_._internal_controller_name_registered()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .base_names.v1.NameRenewed controller_name_renewed = 2;
            {
              total_size += 1UL * this_._internal_controller_name_renewed_size();
              for (const auto& msg : this_._internal_controller_name_renewed()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ControllerEvents::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ControllerEvents*>(&to_msg);
  auto& from = static_cast<const ControllerEvents&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:base_names.v1.ControllerEvents)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_controller_name_registered()->MergeFrom(
      from._internal_controller_name_registered());
  _this->_internal_mutable_controller_name_renewed()->MergeFrom(
      from._internal_controller_name_renewed());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ControllerEvents::CopyFrom(const ControllerEvents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:base_names.v1.ControllerEvents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ControllerEvents::InternalSwap(ControllerEvents* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.controller_name_registered_.InternalSwap(&other->_impl_.controller_name_registered_);
  _impl_.controller_name_renewed_.InternalSwap(&other->_impl_.controller_name_renewed_);
}

::google::protobuf::Metadata ControllerEvents::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReverseEvents::_Internal {
 public:
};

ReverseEvents::ReverseEvents(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:base_names.v1.ReverseEvents)
}
inline PROTOBUF_NDEBUG_INLINE ReverseEvents::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::base_names::v1::ReverseEvents& from_msg)
      : reverse_claimed_{visibility, arena, from.reverse_claimed_},
        _cached_size_{0} {}

ReverseEvents::ReverseEvents(
    ::google::protobuf::Arena* arena,
    const ReverseEvents& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ReverseEvents* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:base_names.v1.ReverseEvents)
}
inline PROTOBUF_NDEBUG_INLINE ReverseEvents::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : reverse_claimed_{visibility, arena},
        _cached_size_{0} {}

inline void ReverseEvents::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ReverseEvents::~ReverseEvents() {
  // @@protoc_insertion_point(destructor:base_names.v1.ReverseEvents)
  SharedDtor(*this);
}
inline void ReverseEvents::SharedDtor(MessageLite& self) {
  ReverseEvents& this_ = static_cast<ReverseEvents&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ReverseEvents::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ReverseEvents(arena);
}
constexpr auto ReverseEvents::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ReverseEvents, _impl_.reverse_claimed_) +
          decltype(ReverseEvents::_impl_.reverse_claimed_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ReverseEvents), alignof(ReverseEvents), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ReverseEvents::PlacementNew_,
                                 sizeof(ReverseEvents),
                                 alignof(ReverseEvents));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ReverseEvents::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ReverseEvents_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ReverseEvents::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ReverseEvents>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ReverseEvents::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ReverseEvents>(), &ReverseEvents::ByteSizeLong,
            &ReverseEvents::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ReverseEvents, _impl_._cached_size_),
        false,
    },
    &ReverseEvents::kDescriptorMethods,
    &descriptor_table_base_5fnames_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ReverseEvents::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ReverseEvents::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::base_names::v1::ReverseEvents>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .base_names.v1.ReverseClaimed reverse_claimed = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReverseEvents, _impl_.reverse_claimed_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .base_names.v1.ReverseClaimed reverse_claimed = 1;
    {PROTOBUF_FIELD_OFFSET(ReverseEvents, _impl_.reverse_claimed_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::base_names::v1::ReverseClaimed>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ReverseEvents::Clear() {
// @@protoc_insertion_point(message_clear_start:base_names.v1.ReverseEvents)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reverse_claimed_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ReverseEvents::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ReverseEvents& this_ = static_cast<const ReverseEvents&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ReverseEvents::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ReverseEvents& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:base_names.v1.ReverseEvents)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .base_names.v1.ReverseClaimed reverse_claimed = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_reverse_claimed_size());
               i < n; i++) {
            const auto& repfield = this_._internal_reverse_claimed().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:base_names.v1.ReverseEvents)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ReverseEvents::ByteSizeLong(const MessageLite& base) {
          const ReverseEvents& this_ = static_cast<const ReverseEvents&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ReverseEvents::ByteSizeLong() const {
          const ReverseEvents& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:base_names.v1.ReverseEvents)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .base_names.v1.ReverseClaimed reverse_claimed = 1;
            {
              total_size += 1UL * this_._internal_reverse_claimed_size();
              for (const auto& msg : this_._internal_reverse_claimed()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ReverseEvents::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReverseEvents*>(&to_msg);
  auto& from = static_cast<const ReverseEvents&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:base_names.v1.ReverseEvents)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_reverse_claimed()->MergeFrom(
      from._internal_reverse_claimed());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReverseEvents::CopyFrom(const ReverseEvents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:base_names.v1.ReverseEvents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReverseEvents::InternalSwap(ReverseEvents* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.reverse_claimed_.InternalSwap(&other->_impl_.reverse_claimed_);
}

::google::protobuf::Metadata ReverseEvents::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReverseClaimed::_Internal {
 public:
};

ReverseClaimed::ReverseClaimed(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:base_names.v1.ReverseClaimed)
}
inline PROTOBUF_NDEBUG_INLINE ReverseClaimed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::base_names::v1::ReverseClaimed& from_msg)
      : addr_(arena, from.addr_),
        node_(arena, from.node_),
        owner_(arena, from.owner_),
        block_number_(arena, from.block_number_),
        block_hash_(arena, from.block_hash_),
        transaction_hash_(arena, from.transaction_hash_),
        _cached_size_{0} {}

ReverseClaimed::ReverseClaimed(
    ::google::protobuf::Arena* arena,
    const ReverseClaimed& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ReverseClaimed* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.log_index_ = from._impl_.log_index_;

  // @@protoc_insertion_point(copy_constructor:base_names.v1.ReverseClaimed)
}
inline PROTOBUF_NDEBUG_INLINE ReverseClaimed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : addr_(arena),
        node_(arena),
        owner_(arena),
        block_number_(arena),
        block_hash_(arena),
        transaction_hash_(arena),
        _cached_size_{0} {}

inline void ReverseClaimed::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.log_index_ = {};
}
ReverseClaimed::~ReverseClaimed() {
  // @@protoc_insertion_point(destructor:base_names.v1.ReverseClaimed)
  SharedDtor(*this);
}
inline void ReverseClaimed::SharedDtor(MessageLite& self) {
  ReverseClaimed& this_ = static_cast<ReverseClaimed&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.addr_.Destroy();
  this_._impl_.node_.Destroy();
  this_._impl_.owner_.Destroy();
  this_._impl_.block_number_.Destroy();
  this_._impl_.block_hash_.Destroy();
  this_._impl_.transaction_hash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ReverseClaimed::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ReverseClaimed(arena);
}
constexpr auto ReverseClaimed::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ReverseClaimed),
                                            alignof(ReverseClaimed));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ReverseClaimed::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ReverseClaimed_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ReverseClaimed::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ReverseClaimed>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ReverseClaimed::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ReverseClaimed>(), &ReverseClaimed::ByteSizeLong,
            &ReverseClaimed::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ReverseClaimed, _impl_._cached_size_),
        false,
    },
    &ReverseClaimed::kDescriptorMethods,
    &descriptor_table_base_5fnames_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ReverseClaimed::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 88, 2> ReverseClaimed::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::base_names::v1::ReverseClaimed>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string addr = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReverseClaimed, _impl_.addr_)}},
    // string node = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ReverseClaimed, _impl_.node_)}},
    // string owner = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ReverseClaimed, _impl_.owner_)}},
    // string block_number = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ReverseClaimed, _impl_.block_number_)}},
    // string block_hash = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ReverseClaimed, _impl_.block_hash_)}},
    // string transaction_hash = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ReverseClaimed, _impl_.transaction_hash_)}},
    // uint32 log_index = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReverseClaimed, _impl_.log_index_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(ReverseClaimed, _impl_.log_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string addr = 1;
    {PROTOBUF_FIELD_OFFSET(ReverseClaimed, _impl_.addr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string node = 2;
    {PROTOBUF_FIELD_OFFSET(ReverseClaimed, _impl_.node_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string owner = 3;
    {PROTOBUF_FIELD_OFFSET(ReverseClaimed, _impl_.owner_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string block_number = 4;
    {PROTOBUF_FIELD_OFFSET(ReverseClaimed, _impl_.block_number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string block_hash = 5;
    {PROTOBUF_FIELD_OFFSET(ReverseClaimed, _impl_.block_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string transaction_hash = 6;
    {PROTOBUF_FIELD_OFFSET(ReverseClaimed, _impl_.transaction_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 log_index = 7;
    {PROTOBUF_FIELD_OFFSET(ReverseClaimed, _impl_.log_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\34\4\4\5\14\12\20\0"
    "base_names.v1.ReverseClaimed"
    "addr"
    "node"
    "owner"
    "block_number"
    "block_hash"
    "transaction_hash"
  }},
};

PROTOBUF_NOINLINE void ReverseClaimed::Clear() {
// @@protoc_insertion_point(message_clear_start:base_names.v1.ReverseClaimed)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.addr_.ClearToEmpty();
  _impl_.node_.ClearToEmpty();
  _impl_.owner_.ClearToEmpty();
  _impl_.block_number_.ClearToEmpty();
  _impl_.block_hash_.ClearToEmpty();
  _impl_.transaction_hash_.ClearToEmpty();
  _impl_.log_index_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ReverseClaimed::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ReverseClaimed& this_ = static_cast<const ReverseClaimed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ReverseClaimed::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ReverseClaimed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:base_names.v1.ReverseClaimed)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string addr = 1;
          if (!this_._internal_addr().empty()) {
            const std::string& _s = this_._internal_addr();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.ReverseClaimed.addr");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string node = 2;
          if (!this_._internal_node().empty()) {
            const std::string& _s = this_._internal_node();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.ReverseClaimed.node");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string owner = 3;
          if (!this_._internal_owner().empty()) {
            const std::string& _s = this_._internal_owner();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.ReverseClaimed.owner");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string block_number = 4;
          if (!this_._internal_block_number().empty()) {
            const std::string& _s = this_._internal_block_number();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.ReverseClaimed.block_number");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string block_hash = 5;
          if (!this_._internal_block_hash().empty()) {
            const std::string& _s = this_._internal_block_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.ReverseClaimed.block_hash");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string transaction_hash = 6;
          if (!this_._internal_transaction_hash().empty()) {
            const std::string& _s = this_._internal_transaction_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.ReverseClaimed.transaction_hash");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // uint32 log_index = 7;
          if (this_._internal_log_index() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_log_index(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:base_names.v1.ReverseClaimed)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ReverseClaimed::ByteSizeLong(const MessageLite& base) {
          const ReverseClaimed& this_ = static_cast<const ReverseClaimed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ReverseClaimed::ByteSizeLong() const {
          const ReverseClaimed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:base_names.v1.ReverseClaimed)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string addr = 1;
            if (!this_._internal_addr().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_addr());
            }
            // string node = 2;
            if (!this_._internal_node().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_node());
            }
            // string owner = 3;
            if (!this_._internal_owner().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_owner());
            }
            // string block_number = 4;
            if (!this_._internal_block_number().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_block_number());
            }
            // string block_hash = 5;
            if (!this_._internal_block_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_block_hash());
            }
            // string transaction_hash = 6;
            if (!this_._internal_transaction_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_transaction_hash());
            }
            // uint32 log_index = 7;
            if (this_._internal_log_index() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_log_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ReverseClaimed::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReverseClaimed*>(&to_msg);
  auto& from = static_cast<const ReverseClaimed&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:base_names.v1.ReverseClaimed)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_addr().empty()) {
    _this->_internal_set_addr(from._internal_addr());
  }
  if (!from._internal_node().empty()) {
    _this->_internal_set_node(from._internal_node());
  }
  if (!from._internal_owner().empty()) {
    _this->_internal_set_owner(from._internal_owner());
  }
  if (!from._internal_block_number().empty()) {
    _this->_internal_set_block_number(from._internal_block_number());
  }
  if (!from._internal_block_hash().empty()) {
    _this->_internal_set_block_hash(from._internal_block_hash());
  }
  if (!from._internal_transaction_hash().empty()) {
    _this->_internal_set_transaction_hash(from._internal_transaction_hash());
  }
  if (from._internal_log_index() != 0) {
    _this->_impl_.log_index_ = from._impl_.log_index_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReverseClaimed::CopyFrom(const ReverseClaimed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:base_names.v1.ReverseClaimed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReverseClaimed::InternalSwap(ReverseClaimed* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.addr_, &other->_impl_.addr_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_, &other->_impl_.node_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, &other->_impl_.owner_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.block_number_, &other->_impl_.block_number_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.block_hash_, &other->_impl_.block_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transaction_hash_, &other->_impl_.transaction_hash_, arena);
        swap(_impl_.log_index_, other->_impl_.log_index_);
}

::google::protobuf::Metadata ReverseClaimed::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Domain::_Internal {
 public:
};

Domain::Domain(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:base_names.v1.Domain)
}
inline PROTOBUF_NDEBUG_INLINE Domain::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::base_names::v1::Domain& from_msg)
      : id_(arena, from.id_),
        name_(arena, from.name_),
        label_name_(arena, from.label_name_),
        label_hash_(arena, from.label_hash_),
        parent_(arena, from.parent_),
        subdomain_count_(arena, from.subdomain_count_),
        resolved_address_(arena, from.resolved_address_),
        owner_(arena, from.owner_),
        resolver_(arena, from.resolver_),
        subdomain_count_updated_at_(arena, from.subdomain_count_updated_at_),
        _cached_size_{0} {}

Domain::Domain(
    ::google::protobuf::Arena* arena,
    const Domain& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Domain* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ttl_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, ttl_),
           offsetof(Impl_, is_migrated_) -
               offsetof(Impl_, ttl_) +
               sizeof(Impl_::is_migrated_));

  // @@protoc_insertion_point(copy_constructor:base_names.v1.Domain)
}
inline PROTOBUF_NDEBUG_INLINE Domain::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        name_(arena),
        label_name_(arena),
        label_hash_(arena),
        parent_(arena),
        subdomain_count_(arena),
        resolved_address_(arena),
        owner_(arena),
        resolver_(arena),
        subdomain_count_updated_at_(arena),
        _cached_size_{0} {}

inline void Domain::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ttl_),
           0,
           offsetof(Impl_, is_migrated_) -
               offsetof(Impl_, ttl_) +
               sizeof(Impl_::is_migrated_));
}
Domain::~Domain() {
  // @@protoc_insertion_point(destructor:base_names.v1.Domain)
  SharedDtor(*this);
}
inline void Domain::SharedDtor(MessageLite& self) {
  Domain& this_ = static_cast<Domain&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.label_name_.Destroy();
  this_._impl_.label_hash_.Destroy();
  this_._impl_.parent_.Destroy();
  this_._impl_.subdomain_count_.Destroy();
  this_._impl_.resolved_address_.Destroy();
  this_._impl_.owner_.Destroy();
  this_._impl_.resolver_.Destroy();
  this_._impl_.subdomain_count_updated_at_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Domain::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Domain(arena);
}
constexpr auto Domain::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Domain),
                                            alignof(Domain));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Domain::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Domain_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Domain::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Domain>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Domain::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Domain>(), &Domain::ByteSizeLong,
            &Domain::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Domain, _impl_._cached_size_),
        false,
    },
    &Domain::kDescriptorMethods,
    &descriptor_table_base_5fnames_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Domain::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 0, 139, 2> Domain::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::base_names::v1::Domain>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Domain, _impl_.id_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Domain, _impl_.name_)}},
    // string label_name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Domain, _impl_.label_name_)}},
    // string label_hash = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Domain, _impl_.label_hash_)}},
    // string parent = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Domain, _impl_.parent_)}},
    // string subdomain_count = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Domain, _impl_.subdomain_count_)}},
    // string resolved_address = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Domain, _impl_.resolved_address_)}},
    // string owner = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Domain, _impl_.owner_)}},
    // string resolver = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(Domain, _impl_.resolver_)}},
    // uint64 ttl = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Domain, _impl_.ttl_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(Domain, _impl_.ttl_)}},
    // bool is_migrated = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Domain, _impl_.is_migrated_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(Domain, _impl_.is_migrated_)}},
    // uint64 created_at = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Domain, _impl_.created_at_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(Domain, _impl_.created_at_)}},
    // string subdomain_count_updated_at = 13;
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(Domain, _impl_.subdomain_count_updated_at_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(Domain, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(Domain, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string label_name = 3;
    {PROTOBUF_FIELD_OFFSET(Domain, _impl_.label_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string label_hash = 4;
    {PROTOBUF_FIELD_OFFSET(Domain, _impl_.label_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string parent = 5;
    {PROTOBUF_FIELD_OFFSET(Domain, _impl_.parent_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string subdomain_count = 6;
    {PROTOBUF_FIELD_OFFSET(Domain, _impl_.subdomain_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string resolved_address = 7;
    {PROTOBUF_FIELD_OFFSET(Domain, _impl_.resolved_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string owner = 8;
    {PROTOBUF_FIELD_OFFSET(Domain, _impl_.owner_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string resolver = 9;
    {PROTOBUF_FIELD_OFFSET(Domain, _impl_.resolver_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 ttl = 10;
    {PROTOBUF_FIELD_OFFSET(Domain, _impl_.ttl_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bool is_migrated = 11;
    {PROTOBUF_FIELD_OFFSET(Domain, _impl_.is_migrated_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint64 created_at = 12;
    {PROTOBUF_FIELD_OFFSET(Domain, _impl_.created_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string subdomain_count_updated_at = 13;
    {PROTOBUF_FIELD_OFFSET(Domain, _impl_.subdomain_count_updated_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\24\2\4\12\12\6\17\20\5\10\0\0\0\32\0\0"
    "base_names.v1.Domain"
    "id"
    "name"
    "label_name"
    "label_hash"
    "parent"
    "subdomain_count"
    "resolved_address"
    "owner"
    "resolver"
    "subdomain_count_updated_at"
  }},
};

PROTOBUF_NOINLINE void Domain::Clear() {
// @@protoc_insertion_point(message_clear_start:base_names.v1.Domain)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.label_name_.ClearToEmpty();
  _impl_.label_hash_.ClearToEmpty();
  _impl_.parent_.ClearToEmpty();
  _impl_.subdomain_count_.ClearToEmpty();
  _impl_.resolved_address_.ClearToEmpty();
  _impl_.owner_.ClearToEmpty();
  _impl_.resolver_.ClearToEmpty();
  _impl_.subdomain_count_updated_at_.ClearToEmpty();
  ::memset(&_impl_.ttl_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_migrated_) -
      reinterpret_cast<char*>(&_impl_.ttl_)) + sizeof(_impl_.is_migrated_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Domain::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Domain& this_ = static_cast<const Domain&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Domain::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Domain& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:base_names.v1.Domain)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1;
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.Domain.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string name = 2;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.Domain.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string label_name = 3;
          if (!this_._internal_label_name().empty()) {
            const std::string& _s = this_._internal_label_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.Domain.label_name");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string label_hash = 4;
          if (!this_._internal_label_hash().empty()) {
            const std::string& _s = this_._internal_label_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.Domain.label_hash");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string parent = 5;
          if (!this_._internal_parent().empty()) {
            const std::string& _s = this_._internal_parent();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.Domain.parent");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string subdomain_count = 6;
          if (!this_._internal_subdomain_count().empty()) {
            const std::string& _s = this_._internal_subdomain_count();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.Domain.subdomain_count");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string resolved_address = 7;
          if (!this_._internal_resolved_address().empty()) {
            const std::string& _s = this_._internal_resolved_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.Domain.resolved_address");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // string owner = 8;
          if (!this_._internal_owner().empty()) {
            const std::string& _s = this_._internal_owner();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.Domain.owner");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // string resolver = 9;
          if (!this_._internal_resolver().empty()) {
            const std::string& _s = this_._internal_resolver();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.Domain.resolver");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // uint64 ttl = 10;
          if (this_._internal_ttl() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                10, this_._internal_ttl(), target);
          }

          // bool is_migrated = 11;
          if (this_._internal_is_migrated() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                11, this_._internal_is_migrated(), target);
          }

          // uint64 created_at = 12;
          if (this_._internal_created_at() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                12, this_._internal_created_at(), target);
          }

          // string subdomain_count_updated_at = 13;
          if (!this_._internal_subdomain_count_updated_at().empty()) {
            const std::string& _s = this_._internal_subdomain_count_updated_at();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.Domain.subdomain_count_updated_at");
            target = stream->WriteStringMaybeAliased(13, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:base_names.v1.Domain)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Domain::ByteSizeLong(const MessageLite& base) {
          const Domain& this_ = static_cast<const Domain&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Domain::ByteSizeLong() const {
          const Domain& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:base_names.v1.Domain)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string id = 1;
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string name = 2;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string label_name = 3;
            if (!this_._internal_label_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_label_name());
            }
            // string label_hash = 4;
            if (!this_._internal_label_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_label_hash());
            }
            // string parent = 5;
            if (!this_._internal_parent().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_parent());
            }
            // string subdomain_count = 6;
            if (!this_._internal_subdomain_count().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_subdomain_count());
            }
            // string resolved_address = 7;
            if (!this_._internal_resolved_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_resolved_address());
            }
            // string owner = 8;
            if (!this_._internal_owner().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_owner());
            }
            // string resolver = 9;
            if (!this_._internal_resolver().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_resolver());
            }
            // string subdomain_count_updated_at = 13;
            if (!this_._internal_subdomain_count_updated_at().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_subdomain_count_updated_at());
            }
            // uint64 ttl = 10;
            if (this_._internal_ttl() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_ttl());
            }
            // uint64 created_at = 12;
            if (this_._internal_created_at() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_created_at());
            }
            // bool is_migrated = 11;
            if (this_._internal_is_migrated() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Domain::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Domain*>(&to_msg);
  auto& from = static_cast<const Domain&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:base_names.v1.Domain)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_label_name().empty()) {
    _this->_internal_set_label_name(from._internal_label_name());
  }
  if (!from._internal_label_hash().empty()) {
    _this->_internal_set_label_hash(from._internal_label_hash());
  }
  if (!from._internal_parent().empty()) {
    _this->_internal_set_parent(from._internal_parent());
  }
  if (!from._internal_subdomain_count().empty()) {
    _this->_internal_set_subdomain_count(from._internal_subdomain_count());
  }
  if (!from._internal_resolved_address().empty()) {
    _this->_internal_set_resolved_address(from._internal_resolved_address());
  }
  if (!from._internal_owner().empty()) {
    _this->_internal_set_owner(from._internal_owner());
  }
  if (!from._internal_resolver().empty()) {
    _this->_internal_set_resolver(from._internal_resolver());
  }
  if (!from._internal_subdomain_count_updated_at().empty()) {
    _this->_internal_set_subdomain_count_updated_at(from._internal_subdomain_count_updated_at());
  }
  if (from._internal_ttl() != 0) {
    _this->_impl_.ttl_ = from._impl_.ttl_;
  }
  if (from._internal_created_at() != 0) {
    _this->_impl_.created_at_ = from._impl_.created_at_;
  }
  if (from._internal_is_migrated() != 0) {
    _this->_impl_.is_migrated_ = from._impl_.is_migrated_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Domain::CopyFrom(const Domain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:base_names.v1.Domain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Domain::InternalSwap(Domain* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.label_name_, &other->_impl_.label_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.label_hash_, &other->_impl_.label_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parent_, &other->_impl_.parent_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subdomain_count_, &other->_impl_.subdomain_count_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.resolved_address_, &other->_impl_.resolved_address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, &other->_impl_.owner_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.resolver_, &other->_impl_.resolver_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subdomain_count_updated_at_, &other->_impl_.subdomain_count_updated_at_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Domain, _impl_.is_migrated_)
      + sizeof(Domain::_impl_.is_migrated_)
      - PROTOBUF_FIELD_OFFSET(Domain, _impl_.ttl_)>(
          reinterpret_cast<char*>(&_impl_.ttl_),
          reinterpret_cast<char*>(&other->_impl_.ttl_));
}

::google::protobuf::Metadata Domain::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Registration::_Internal {
 public:
};

Registration::Registration(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:base_names.v1.Registration)
}
inline PROTOBUF_NDEBUG_INLINE Registration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::base_names::v1::Registration& from_msg)
      : id_(arena, from.id_),
        domain_(arena, from.domain_),
        registration_date_(arena, from.registration_date_),
        expiry_date_(arena, from.expiry_date_),
        cost_(arena, from.cost_),
        label_name_(arena, from.label_name_),
        label_hash_(arena, from.label_hash_),
        registrant_(arena, from.registrant_),
        label_owner_(arena, from.label_owner_),
        _cached_size_{0} {}

Registration::Registration(
    ::google::protobuf::Arena* arena,
    const Registration& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Registration* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:base_names.v1.Registration)
}
inline PROTOBUF_NDEBUG_INLINE Registration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        domain_(arena),
        registration_date_(arena),
        expiry_date_(arena),
        cost_(arena),
        label_name_(arena),
        label_hash_(arena),
        registrant_(arena),
        label_owner_(arena),
        _cached_size_{0} {}

inline void Registration::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Registration::~Registration() {
  // @@protoc_insertion_point(destructor:base_names.v1.Registration)
  SharedDtor(*this);
}
inline void Registration::SharedDtor(MessageLite& self) {
  Registration& this_ = static_cast<Registration&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.domain_.Destroy();
  this_._impl_.registration_date_.Destroy();
  this_._impl_.expiry_date_.Destroy();
  this_._impl_.cost_.Destroy();
  this_._impl_.label_name_.Destroy();
  this_._impl_.label_hash_.Destroy();
  this_._impl_.registrant_.Destroy();
  this_._impl_.label_owner_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Registration::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Registration(arena);
}
constexpr auto Registration::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Registration),
                                            alignof(Registration));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Registration::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Registration_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Registration::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Registration>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Registration::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Registration>(), &Registration::ByteSizeLong,
            &Registration::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Registration, _impl_._cached_size_),
        false,
    },
    &Registration::kDescriptorMethods,
    &descriptor_table_base_5fnames_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Registration::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 124, 2> Registration::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::base_names::v1::Registration>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Registration, _impl_.id_)}},
    // string domain = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Registration, _impl_.domain_)}},
    // string registration_date = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Registration, _impl_.registration_date_)}},
    // string expiry_date = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Registration, _impl_.expiry_date_)}},
    // string cost = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Registration, _impl_.cost_)}},
    // string label_name = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Registration, _impl_.label_name_)}},
    // string label_hash = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Registration, _impl_.label_hash_)}},
    // string registrant = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Registration, _impl_.registrant_)}},
    // string label_owner = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(Registration, _impl_.label_owner_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(Registration, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string domain = 2;
    {PROTOBUF_FIELD_OFFSET(Registration, _impl_.domain_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string registration_date = 3;
    {PROTOBUF_FIELD_OFFSET(Registration, _impl_.registration_date_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string expiry_date = 4;
    {PROTOBUF_FIELD_OFFSET(Registration, _impl_.expiry_date_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string cost = 5;
    {PROTOBUF_FIELD_OFFSET(Registration, _impl_.cost_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string label_name = 6;
    {PROTOBUF_FIELD_OFFSET(Registration, _impl_.label_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string label_hash = 7;
    {PROTOBUF_FIELD_OFFSET(Registration, _impl_.label_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string registrant = 8;
    {PROTOBUF_FIELD_OFFSET(Registration, _impl_.registrant_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string label_owner = 9;
    {PROTOBUF_FIELD_OFFSET(Registration, _impl_.label_owner_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\2\6\21\13\4\12\12\12\13\0\0\0\0\0\0"
    "base_names.v1.Registration"
    "id"
    "domain"
    "registration_date"
    "expiry_date"
    "cost"
    "label_name"
    "label_hash"
    "registrant"
    "label_owner"
  }},
};

PROTOBUF_NOINLINE void Registration::Clear() {
// @@protoc_insertion_point(message_clear_start:base_names.v1.Registration)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.domain_.ClearToEmpty();
  _impl_.registration_date_.ClearToEmpty();
  _impl_.expiry_date_.ClearToEmpty();
  _impl_.cost_.ClearToEmpty();
  _impl_.label_name_.ClearToEmpty();
  _impl_.label_hash_.ClearToEmpty();
  _impl_.registrant_.ClearToEmpty();
  _impl_.label_owner_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Registration::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Registration& this_ = static_cast<const Registration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Registration::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Registration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:base_names.v1.Registration)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1;
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.Registration.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string domain = 2;
          if (!this_._internal_domain().empty()) {
            const std::string& _s = this_._internal_domain();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.Registration.domain");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string registration_date = 3;
          if (!this_._internal_registration_date().empty()) {
            const std::string& _s = this_._internal_registration_date();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.Registration.registration_date");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string expiry_date = 4;
          if (!this_._internal_expiry_date().empty()) {
            const std::string& _s = this_._internal_expiry_date();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.Registration.expiry_date");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string cost = 5;
          if (!this_._internal_cost().empty()) {
            const std::string& _s = this_._internal_cost();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.Registration.cost");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string label_name = 6;
          if (!this_._internal_label_name().empty()) {
            const std::string& _s = this_._internal_label_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.Registration.label_name");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string label_hash = 7;
          if (!this_._internal_label_hash().empty()) {
            const std::string& _s = this_._internal_label_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.Registration.label_hash");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // string registrant = 8;
          if (!this_._internal_registrant().empty()) {
            const std::string& _s = this_._internal_registrant();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.Registration.registrant");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // string label_owner = 9;
          if (!this_._internal_label_owner().empty()) {
            const std::string& _s = this_._internal_label_owner();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.Registration.label_owner");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:base_names.v1.Registration)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Registration::ByteSizeLong(const MessageLite& base) {
          const Registration& this_ = static_cast<const Registration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Registration::ByteSizeLong() const {
          const Registration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:base_names.v1.Registration)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string id = 1;
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string domain = 2;
            if (!this_._internal_domain().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_domain());
            }
            // string registration_date = 3;
            if (!this_._internal_registration_date().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_registration_date());
            }
            // string expiry_date = 4;
            if (!this_._internal_expiry_date().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_expiry_date());
            }
            // string cost = 5;
            if (!this_._internal_cost().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_cost());
            }
            // string label_name = 6;
            if (!this_._internal_label_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_label_name());
            }
            // string label_hash = 7;
            if (!this_._internal_label_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_label_hash());
            }
            // string registrant = 8;
            if (!this_._internal_registrant().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_registrant());
            }
            // string label_owner = 9;
            if (!this_._internal_label_owner().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_label_owner());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Registration::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Registration*>(&to_msg);
  auto& from = static_cast<const Registration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:base_names.v1.Registration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_domain().empty()) {
    _this->_internal_set_domain(from._internal_domain());
  }
  if (!from._internal_registration_date().empty()) {
    _this->_internal_set_registration_date(from._internal_registration_date());
  }
  if (!from._internal_expiry_date().empty()) {
    _this->_internal_set_expiry_date(from._internal_expiry_date());
  }
  if (!from._internal_cost().empty()) {
    _this->_internal_set_cost(from._internal_cost());
  }
  if (!from._internal_label_name().empty()) {
    _this->_internal_set_label_name(from._internal_label_name());
  }
  if (!from._internal_label_hash().empty()) {
    _this->_internal_set_label_hash(from._internal_label_hash());
  }
  if (!from._internal_registrant().empty()) {
    _this->_internal_set_registrant(from._internal_registrant());
  }
  if (!from._internal_label_owner().empty()) {
    _this->_internal_set_label_owner(from._internal_label_owner());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Registration::CopyFrom(const Registration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:base_names.v1.Registration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Registration::InternalSwap(Registration* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.domain_, &other->_impl_.domain_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.registration_date_, &other->_impl_.registration_date_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.expiry_date_, &other->_impl_.expiry_date_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cost_, &other->_impl_.cost_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.label_name_, &other->_impl_.label_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.label_hash_, &other->_impl_.label_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.registrant_, &other->_impl_.registrant_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.label_owner_, &other->_impl_.label_owner_, arena);
}

::google::protobuf::Metadata Registration::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReverseRegistration::_Internal {
 public:
};

ReverseRegistration::ReverseRegistration(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:base_names.v1.ReverseRegistration)
}
inline PROTOBUF_NDEBUG_INLINE ReverseRegistration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::base_names::v1::ReverseRegistration& from_msg)
      : id_(arena, from.id_),
        domain_(arena, from.domain_),
        address_(arena, from.address_),
        block_number_(arena, from.block_number_),
        block_hash_(arena, from.block_hash_),
        transaction_hash_(arena, from.transaction_hash_),
        _cached_size_{0} {}

ReverseRegistration::ReverseRegistration(
    ::google::protobuf::Arena* arena,
    const ReverseRegistration& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ReverseRegistration* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.log_index_ = from._impl_.log_index_;

  // @@protoc_insertion_point(copy_constructor:base_names.v1.ReverseRegistration)
}
inline PROTOBUF_NDEBUG_INLINE ReverseRegistration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        domain_(arena),
        address_(arena),
        block_number_(arena),
        block_hash_(arena),
        transaction_hash_(arena),
        _cached_size_{0} {}

inline void ReverseRegistration::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.log_index_ = {};
}
ReverseRegistration::~ReverseRegistration() {
  // @@protoc_insertion_point(destructor:base_names.v1.ReverseRegistration)
  SharedDtor(*this);
}
inline void ReverseRegistration::SharedDtor(MessageLite& self) {
  ReverseRegistration& this_ = static_cast<ReverseRegistration&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.domain_.Destroy();
  this_._impl_.address_.Destroy();
  this_._impl_.block_number_.Destroy();
  this_._impl_.block_hash_.Destroy();
  this_._impl_.transaction_hash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ReverseRegistration::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ReverseRegistration(arena);
}
constexpr auto ReverseRegistration::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ReverseRegistration),
                                            alignof(ReverseRegistration));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ReverseRegistration::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ReverseRegistration_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ReverseRegistration::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ReverseRegistration>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ReverseRegistration::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ReverseRegistration>(), &ReverseRegistration::ByteSizeLong,
            &ReverseRegistration::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ReverseRegistration, _impl_._cached_size_),
        false,
    },
    &ReverseRegistration::kDescriptorMethods,
    &descriptor_table_base_5fnames_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ReverseRegistration::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 95, 2> ReverseRegistration::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::base_names::v1::ReverseRegistration>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReverseRegistration, _impl_.id_)}},
    // string domain = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ReverseRegistration, _impl_.domain_)}},
    // string address = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ReverseRegistration, _impl_.address_)}},
    // string block_number = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ReverseRegistration, _impl_.block_number_)}},
    // string block_hash = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ReverseRegistration, _impl_.block_hash_)}},
    // string transaction_hash = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ReverseRegistration, _impl_.transaction_hash_)}},
    // uint32 log_index = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReverseRegistration, _impl_.log_index_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(ReverseRegistration, _impl_.log_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(ReverseRegistration, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string domain = 2;
    {PROTOBUF_FIELD_OFFSET(ReverseRegistration, _impl_.domain_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string address = 3;
    {PROTOBUF_FIELD_OFFSET(ReverseRegistration, _impl_.address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string block_number = 4;
    {PROTOBUF_FIELD_OFFSET(ReverseRegistration, _impl_.block_number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string block_hash = 5;
    {PROTOBUF_FIELD_OFFSET(ReverseRegistration, _impl_.block_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string transaction_hash = 6;
    {PROTOBUF_FIELD_OFFSET(ReverseRegistration, _impl_.transaction_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 log_index = 7;
    {PROTOBUF_FIELD_OFFSET(ReverseRegistration, _impl_.log_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\41\2\6\7\14\12\20\0"
    "base_names.v1.ReverseRegistration"
    "id"
    "domain"
    "address"
    "block_number"
    "block_hash"
    "transaction_hash"
  }},
};

PROTOBUF_NOINLINE void ReverseRegistration::Clear() {
// @@protoc_insertion_point(message_clear_start:base_names.v1.ReverseRegistration)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.domain_.ClearToEmpty();
  _impl_.address_.ClearToEmpty();
  _impl_.block_number_.ClearToEmpty();
  _impl_.block_hash_.ClearToEmpty();
  _impl_.transaction_hash_.ClearToEmpty();
  _impl_.log_index_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ReverseRegistration::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ReverseRegistration& this_ = static_cast<const ReverseRegistration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ReverseRegistration::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ReverseRegistration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:base_names.v1.ReverseRegistration)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1;
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.ReverseRegistration.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string domain = 2;
          if (!this_._internal_domain().empty()) {
            const std::string& _s = this_._internal_domain();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.ReverseRegistration.domain");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string address = 3;
          if (!this_._internal_address().empty()) {
            const std::string& _s = this_._internal_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.ReverseRegistration.address");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string block_number = 4;
          if (!this_._internal_block_number().empty()) {
            const std::string& _s = this_._internal_block_number();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.ReverseRegistration.block_number");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string block_hash = 5;
          if (!this_._internal_block_hash().empty()) {
            const std::string& _s = this_._internal_block_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.ReverseRegistration.block_hash");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string transaction_hash = 6;
          if (!this_._internal_transaction_hash().empty()) {
            const std::string& _s = this_._internal_transaction_hash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "base_names.v1.ReverseRegistration.transaction_hash");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // uint32 log_index = 7;
          if (this_._internal_log_index() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_log_index(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:base_names.v1.ReverseRegistration)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ReverseRegistration::ByteSizeLong(const MessageLite& base) {
          const ReverseRegistration& this_ = static_cast<const ReverseRegistration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ReverseRegistration::ByteSizeLong() const {
          const ReverseRegistration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:base_names.v1.ReverseRegistration)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string id = 1;
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string domain = 2;
            if (!this_._internal_domain().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_domain());
            }
            // string address = 3;
            if (!this_._internal_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_address());
            }
            // string block_number = 4;
            if (!this_._internal_block_number().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_block_number());
            }
            // string block_hash = 5;
            if (!this_._internal_block_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_block_hash());
            }
            // string transaction_hash = 6;
            if (!this_._internal_transaction_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_transaction_hash());
            }
            // uint32 log_index = 7;
            if (this_._internal_log_index() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_log_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ReverseRegistration::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReverseRegistration*>(&to_msg);
  auto& from = static_cast<const ReverseRegistration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:base_names.v1.ReverseRegistration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_domain().empty()) {
    _this->_internal_set_domain(from._internal_domain());
  }
  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  if (!from._internal_block_number().empty()) {
    _this->_internal_set_block_number(from._internal_block_number());
  }
  if (!from._internal_block_hash().empty()) {
    _this->_internal_set_block_hash(from._internal_block_hash());
  }
  if (!from._internal_transaction_hash().empty()) {
    _this->_internal_set_transaction_hash(from._internal_transaction_hash());
  }
  if (from._internal_log_index() != 0) {
    _this->_impl_.log_index_ = from._impl_.log_index_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReverseRegistration::CopyFrom(const ReverseRegistration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:base_names.v1.ReverseRegistration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReverseRegistration::InternalSwap(ReverseRegistration* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.domain_, &other->_impl_.domain_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.block_number_, &other->_impl_.block_number_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.block_hash_, &other->_impl_.block_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transaction_hash_, &other->_impl_.transaction_hash_, arena);
        swap(_impl_.log_index_, other->_impl_.log_index_);
}

::google::protobuf::Metadata ReverseRegistration::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace base_names
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_base_5fnames_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
